{"version":3,"sources":["images/book.jpeg","actions/dispatchError.js","actions/types.js","actions/authActions.js","components/Modal.js","containers/MessageModal.js","templates/AuthTemplate.js","containers/SignIn.js","containers/SignUp.js","config.js","components/NavCurrentOrder.js","actions/dataActions.js","actions/doActions.js","components/ModalComponent.js","containers/NavBar.js","templates/MainTemplate.js","components/CardComponent.js","components/BooksCatalog.js","components/OrderComponent.js","components/OrdersList.js","components/CurrentOrder.js","containers/Main.js","reducers/dataReducer.js","reducers/authReducer.js","reducers/doReducer.js","reducers/messageReducer.js","reducers/currentOrderReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","dispatchError","err","dispatch","console","log","response","type","payload","data","message","toString","status","axios","defaults","headers","common","localStorage","getItem","dispatchSuccess","getUser","get","then","res","json","user","catch","Modal","_this","this","setTimeout","props","forceUnmount","_this$props","titleResolve","titleReject","resolve","reject","buttonResolve","react_default","a","createElement","reactstrap_es","color","onClick","buttonReject","styledBorder","border","className","style","background","Component","MessageModal","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","messages","currentID","deleteById","bind","assertThisInitialized","inherits","createClass","key","value","id","filter","messageObj","setState","nextProps","toConsumableArray","concat","text","_this2","modals","map","components_Modal","connect","AuthTemplate","_ref","children","xs","SignIn","login","password","handleSignIn","setUnauthorizated","token","history","push","e","preventDefault","authorizate","_this3","for","name","placeholder","onChange","target","Link","to","auth","_ref3","post","email","setItem","JSON","stringify","param","SignUp","passwordConfirm","fullname","phone","handleSignUp","_this$state","register","registerFailed","_ref4","_ref2","config","NavCurrentOrder","handleClick","marginLeft","booksNumber","fetchBooks","books","ModalComponent","modal","fields","toggle","length","forEach","field","bodyEntry","keys","_loop","_field","title","objectSpread","defineProperty","btnColor","buttonLabel","isOpen","React","NavBar","booksNubmer","addBook","orderedBooks","booksCount","book","count","author","pagesNumber","category","description","price","light","expand","href","navbar","role","showCurrentOrder","showBooksCatalog","showOrders","nav","inNavbar","caret","right","components_ModalComponent","divider","currentOrder","MainTemplate","Fragment","containers_NavBar","CardComponent","src","img","alt","bookId","_id","showWarning","handleDeleteBook","countPagesNumber","countCategory","countPrice","handleUpdateBook","BooksCatalog","deleteBook","newBooks","updateBook","unshift","addBookIntoOrder","showAppWarning","i","components_CardComponent","assign","rendered","delete","_ref5","put","_ref10","OrderComponent","apply","arguments","bookDetails","Author","disabled","orderNumber","summary","statusDescription","resolveRejectOrder","deleteOrderById","OrdersList","orders","orderStatus","fetchOrders","deleteOrder","newOrders","order","confirm","confirmRejectOrder","components_OrderComponent","components_OrdersList","do","_ref8","Content-Type","_ref7","CurrentOrder","Math","round","random","resetOrder","setBooksIntoOrder","showStyle","paddingTop","display","_this2$state","createOrder","_ref6","_ref9","Main","activeComponent","unauthorizated","components_BooksCatalog","currentOrderStyle","templates_MainTemplate","components_CurrentOrder","initialState","users","parse","combineReducers","undefined","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","containers_MessageModal","HashRouter","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff7568b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book.43596fee.jpeg\";","import { \r\n    RESPONSE_MESSAGE_ERROR,\r\n    SET_UNAUTHORIZATED\r\n} from './types';\r\n\r\n\r\n\r\nexport default (err, dispatch)=> {\r\n    console.log('error data: ',err.response)\r\n    let message = '';\r\n    if(err.response && err.response.data && err.response.data.message){\r\n        message = err.response.data.message;\r\n    }else{\r\n        message = err;\r\n    }\r\n    dispatch({\r\n        type: RESPONSE_MESSAGE_ERROR,\r\n        payload: message.toString()\r\n    });\r\n    if(err && err.response && err.response.status===401){\r\n        dispatch({\r\n            type: SET_UNAUTHORIZATED,\r\n            payload: true\r\n        });\r\n    }\r\n}","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const FETCH_BOOKS = 'FETCH_BOOKS';\r\nexport const FETCH_BOOK = 'FETCH_BOOK';\r\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\r\nexport const RESPONSE_MESSAGE_ERROR = 'RESPONSE_MESSAGE_ERROR';\r\nexport const RESPONSE_MESSAGE_SUCCESS = 'RESPONSE_MESSAGE_SUCCESS';\r\nexport const USER_GET = 'USER_GET';\r\nexport const USERS_GET = 'USERS_GET';\r\nexport const USER_UPDATED = 'USER_UPDATED';\r\nexport const USER_DELETED = 'USER_DELETED';\r\nexport const ADD_BOOK = 'ADD_BOOK';\r\nexport const UPDATE_BOOK = 'UPDATE_BOOK';\r\nexport const DELETE_BOOK = 'DELETE_BOOK';\r\nexport const ORDER_CREATE = 'ORDER_CREATE';\r\nexport const ORDER_CONFIRM_REJECT = 'ORDER_CONFIRM_REJECT';\r\nexport const ORDER_DELETE = 'ORDER_DELETE';\r\nexport const SET_UNAUTHORIZATED = 'SET_UNAUTHORIZATED';\r\nexport const SET_BOOKS_INTO_ORDER = 'SET_BOOKS_INTO_ORDER';\r\nexport const SET_NUMBER_INTO_ORDER = 'SET_NUMBER_INTO_ORDER';\r\nexport const SET_DESCRIPRION_INTO_ORDER = 'SET_DESCRIPRION_INTO_ORDER';\r\nexport const ADD_BOOK_INTO_ORDER = 'ADD_BOOK_INTO_ORDER';\r\nexport const SHOW_APP_WARNING = 'SHOW_APP_WARNING';\r\nexport const SHOW_APP_SUCCESS = 'SHOW_APP_SUCCESS';\r\n\r\n","import { SIGN_IN, SIGN_UP, RESPONSE_MESSAGE_ERROR, RESPONSE_MESSAGE_SUCCESS, USER_GET, SET_UNAUTHORIZATED } from './types';\r\nimport axios from 'axios';\r\nimport dispatchError from './dispatchError';\r\n\r\naxios.defaults.headers.common['Authorization'] = localStorage.getItem('jwt_token')\r\n\r\nconst dispatchSuccess = (message, dispatch)=> dispatch({\r\n    type: RESPONSE_MESSAGE_SUCCESS,\r\n    payload: message\r\n});\r\n\r\nexport const setUnauthorizated = ({ param }) => dispatch => {   \r\n    dispatch({\r\n        type: SET_UNAUTHORIZATED,\r\n        payload: !!param\r\n    });\r\n};\r\n\r\nexport const registerFailed = ({ message }) => dispatch => {   \r\n    dispatch({\r\n        type: RESPONSE_MESSAGE_ERROR,\r\n        payload: message\r\n    });\r\n;}\r\n\r\nexport const authorizate = ({login,password}) => dispatch => {   \r\n    axios.post('/auth',{\r\n        email: login,\r\n        password: password\r\n    })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        const token = 'jwt ' + json.token\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n        localStorage.setItem('jwt_token', token)\r\n        localStorage.setItem('user', JSON.stringify(json.user))\r\n\r\n        dispatch({\r\n            type: SIGN_IN,\r\n            payload: token\r\n        });\r\n        dispatch({\r\n            type: USER_GET,\r\n            payload: json.user\r\n        });\r\n        setTimeout(()=>{\r\n            dispatchSuccess(json.message,dispatch);\r\n        },0)\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const register = ({login,password, fullname, phone}) => dispatch => {   \r\n    axios.post('/register',{\r\n        email: login,\r\n        password,\r\n        fullname,\r\n        phone\r\n    })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: SIGN_UP,\r\n            payload: json.user\r\n        });\r\n\r\n        dispatchSuccess(json.message,dispatch);\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const getUser = () => dispatch => {   \r\n    axios.get('/get-user')\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: USER_GET,\r\n            payload: json.user\r\n        });\r\n        \r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Card, CardText, CardBody, Button } from 'reactstrap';\r\nclass Modal extends Component {\r\n    componentDidMount(){\r\n        setTimeout(()=>{\r\n            this.props.forceUnmount();\r\n        },3000);\r\n    }\r\n    render() {\r\n        const { message, titleResolve, titleReject, resolve, reject, type } = this.props;\r\n        let buttonResolve = (titleResolve && resolve)?\r\n            (<Button color='success' onClick={resolve} >{titleResolve}</Button>):'';\r\n        let buttonReject = (titleReject && reject)?\r\n            (<Button color='danger' onClick={reject} >{titleReject}</Button>):'';\r\n        let styledBorder = {};\r\n        switch (type) {\r\n            case 'success':\r\n                styledBorder = {\r\n                    border: '3px solid green'\r\n                };\r\n                break;\r\n            case 'error':\r\n                styledBorder = {\r\n                    border: '3px solid red'\r\n                };\r\n                break;    \r\n            default:\r\n                styledBorder = {\r\n                    border: '3px solid black'\r\n                };\r\n                break;\r\n        }    \r\n        return (\r\n          <div className='simple-modal' style={styledBorder}>\r\n            <Card style={{background: 'rgb(0,0,0,0.7)', color: 'white'}}>\r\n              <CardBody>\r\n                <CardText>{message}</CardText>\r\n                {buttonResolve}\r\n                {buttonReject}\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        );\r\n    };\r\n}\r\n  export default Modal;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../components/Modal'\r\n\r\nexport class MessageModal extends Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          messages:[], // arr of objs\r\n          currentID:0  \r\n      };\r\n      this.deleteById = this.deleteById.bind(this);\r\n  }\r\n  deleteById(id){\r\n    const messages = this.state.messages.filter((messageObj)=>{return messageObj.id!==id});\r\n    this.setState({messages});\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.messageObj){\r\n        console.log('Setting new message... ', nextProps.messageObj);\r\n        this.setState({messages: [...this.state.messages, {\r\n            message: nextProps.messageObj.text,\r\n            type: nextProps.messageObj.type,\r\n            titleResolve:nextProps.messageObj.titleResolve,\r\n            titleReject:nextProps.messageObj.titleReject,\r\n            resolve:nextProps.messageObj.resolve,\r\n            reject:nextProps.messageObj.reject,\r\n            id:this.state.currentID\r\n        }]})\r\n        this.setState({currentID: this.state.currentID+1});\r\n    }\r\n  }  \r\n  render() {\r\n    const modals = this.state.messages.map((messageObj) =>(\r\n        <Modal\r\n            key={messageObj.id} \r\n            message={messageObj.message}\r\n            type={messageObj.type}\r\n            titleResolve={messageObj.titleResolve}\r\n            titleReject={messageObj.titleReject}\r\n            resolve={()=>{\r\n                if(typeof messageObj.resolve === 'function'){\r\n                    messageObj.resolve();\r\n                }\r\n                this.deleteById(messageObj.id);\r\n            }}\r\n            reject={()=>{\r\n                if(typeof messageObj.reject === 'function'){\r\n                    messageObj.reject();\r\n                }\r\n                this.deleteById(messageObj.id);\r\n            }}\r\n            forceUnmount={()=>{\r\n                this.deleteById(messageObj.id);\r\n            }}\r\n        />\r\n    ));  \r\n    return (\r\n        <div className='modal-wrapper'>\r\n            {modals}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messageObj: state.message.message,\r\n});\r\n\r\nexport default connect(mapStateToProps, { })(MessageModal)\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport MessageModal from '../containers/MessageModal';\r\n\r\nexport default ({children}) =>\r\n        <Container className='app-container auth-container' >\r\n            <Row className=\"justify-content-center align-items-center\">\r\n                <Col xs={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { authorizate, setUnauthorizated } from '../actions/authActions';\r\nimport AuthTemplate from '../templates/AuthTemplate';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class SignIn extends Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          login:'',\r\n          password:''\r\n      };\r\n      this.handleSignIn = this.handleSignIn.bind(this);\r\n  }  \r\n  \r\n  componentDidMount(){\r\n      this.props.setUnauthorizated(false);\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.token){\r\n        console.log('Redirecting to Main page...');\r\n        setTimeout(()=>{\r\n            this.props.history.push('/');\r\n        },100);\r\n    }\r\n  }   \r\n  handleSignIn(e){\r\n    e.preventDefault();\r\n    this.props.authorizate({\r\n        login: this.state.login,\r\n        password: this.state.password\r\n    });\r\n  }  \r\n  render() {\r\n    return (\r\n        <AuthTemplate>\r\n            <Form className='auth-form'>\r\n                <FormGroup>\r\n                    <Label for=\"exampleEmail\">Email</Label>\r\n                    <Input \r\n                        type=\"email\" \r\n                        name=\"email\" \r\n                        id=\"exampleEmail\" \r\n                        placeholder=\"Your email\"\r\n                        onChange={(e)=>{\r\n                            this.setState({login: e.target.value});\r\n                        }}\r\n                        value={this.state.login}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"examplePassword\">Password</Label>\r\n                    <Input \r\n                        type=\"password\" \r\n                        name=\"password\" \r\n                        id=\"examplePassword\" \r\n                        placeholder=\"Your password...\"\r\n                        onChange={(e)=>{\r\n                            this.setState({password: e.target.value});\r\n                        }}\r\n                        value={this.state.password}\r\n                        />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label>Not Registered?</Label>\r\n                    <br/>\r\n                    <Link to='/sign-up' >Create an accaunt</Link>\r\n                </FormGroup>\r\n                <Button onClick={this.handleSignIn}>Sign in</Button>\r\n            </Form>\r\n        </AuthTemplate>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n    token: state.auth.token,\r\n});\r\n\r\nexport default connect(mapStateToProps,{ authorizate, setUnauthorizated })(SignIn)\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { register, registerFailed } from '../actions/authActions';\r\nimport AuthTemplate from '../templates/AuthTemplate';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class SignUp extends Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        login:'',\r\n        password:'',\r\n        passwordConfirm:'',\r\n        fullname:'',\r\n        phone:''\r\n      };\r\n      this.handleSignUp = this.handleSignUp.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.user){\r\n        console.log('Redirect to Main page...');\r\n        setTimeout(()=>{\r\n            this.props.history.push('/sign-in');\r\n        },100);\r\n    }\r\n  }  \r\n  \r\n   \r\n  handleSignUp(e){\r\n    e.preventDefault();\r\n    const { login, password, passwordConfirm, fullname, phone } = this.state;\r\n    if(password === passwordConfirm){\r\n        this.props.register({ login, password, fullname, phone });\r\n    }else{\r\n        this.props.registerFailed({\r\n            message: 'Your confirm password is not equal password'\r\n        });\r\n    }\r\n  }  \r\n  render() {\r\n    return (\r\n        <AuthTemplate>\r\n            <Form className='auth-form'>\r\n                <FormGroup>\r\n                    <Label for=\"Email\">Email</Label>\r\n                    <Input \r\n                        type=\"email\" \r\n                        name=\"email\" \r\n                        id=\"Email\" \r\n                        placeholder=\"Your email\"\r\n                        onChange={(e)=>{\r\n                            this.setState({login: e.target.value});\r\n                        }}\r\n                        value={this.state.login}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"Password\">Password</Label>\r\n                    <Input \r\n                        type=\"password\" \r\n                        name=\"password\" \r\n                        id=\"Password\" \r\n                        placeholder=\"Your password...\"\r\n                        onChange={(e)=>{\r\n                            this.setState({password: e.target.value});\r\n                        }}\r\n                        value={this.state.password}\r\n                        />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"PasswordConfirm\">Confirm password</Label>\r\n                    <Input \r\n                        type=\"password\" \r\n                        name=\"passwordConfirm\" \r\n                        id=\"PasswordConfirm\" \r\n                        placeholder=\"Confirm your password...\"\r\n                        onChange={(e)=>{\r\n                            this.setState({passwordConfirm: e.target.value});\r\n                        }}\r\n                        value={this.state.passwordConfirm}\r\n                        />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"Fullname\">Fullname</Label>\r\n                    <Input \r\n                        type=\"text\" \r\n                        name=\"fullname\" \r\n                        id=\"Fullname\" \r\n                        placeholder=\"Your fullname...\"\r\n                        onChange={(e)=>{\r\n                            this.setState({fullname: e.target.value});\r\n                        }}\r\n                        value={this.state.fullname}\r\n                        />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"Phone\">Phone</Label>\r\n                    <Input \r\n                        type=\"phone\" \r\n                        name=\"phone\" \r\n                        id=\"Phone\" \r\n                        placeholder=\"Your phone...\"\r\n                        onChange={(e)=>{\r\n                            this.setState({phone: e.target.value});\r\n                        }}\r\n                        value={this.state.phone}\r\n                        />\r\n                </FormGroup>\r\n                <Button onClick={this.handleSignUp}>Sign Up</Button>\r\n            </Form>\r\n        </AuthTemplate>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps,{ register, registerFailed })(SignUp)\r\n","export default {\r\n    ROLE_USER: 1,\r\n    ROLE_ADMIN: 2,\r\n    ORDER_STATUS_SUCCESS: 1,\r\n    ORDER_STATUS_INPROCESS: 2,\r\n    ORDER_STATUS_REJECTED: 0,\r\n    ORDER_STATUS_NEW: 3,\r\n}","import React from 'react';\r\nimport { Badge } from 'reactstrap';\r\n\r\nexport default function NavCurrentOrder(props) {\r\n  return (\r\n    <div onClick={props.handleClick}>\r\n        CurrentOrder\r\n      <Badge color=\"primary\" style={{ marginLeft: '5px' }}>{+props.booksNumber}</Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { RESPONSE_MESSAGE_ERROR, RESPONSE_MESSAGE_SUCCESS, FETCH_BOOKS, FETCH_ORDERS, USERS_GET, SET_UNAUTHORIZATED } from './types';\r\nimport axios from 'axios';\r\nimport dispatchError from './dispatchError';\r\n\r\naxios.defaults.headers.common['Authorization'] = localStorage.getItem('jwt_token')\r\n\r\nconst dispatchSuccess = (message, dispatch)=> dispatch({\r\n    type: RESPONSE_MESSAGE_SUCCESS,\r\n    payload: message\r\n});\r\n\r\nexport const fetchBooks = () => dispatch => {   \r\n    axios.get('/get-books')\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        dispatch({\r\n            type: FETCH_BOOKS,\r\n            payload: json.books\r\n        });\r\n    })\r\n    .catch((err)=>{\r\n        dispatchError(err,dispatch)\r\n    });\r\n};\r\n\r\nexport const fetchOrders = () => dispatch => {   \r\n    axios.get('/get-orders')\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: FETCH_ORDERS,\r\n            payload: json.orders\r\n        });\r\n\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const fetchUsers = () => dispatch => {   \r\n    axios.get('/get-users')\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: USERS_GET,\r\n            payload: json.users\r\n        });\r\n\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\n","import { \r\n    RESPONSE_MESSAGE_SUCCESS,\r\n    USER_UPDATED,\r\n    USER_DELETED, \r\n    ADD_BOOK,\r\n    DELETE_BOOK,\r\n    UPDATE_BOOK, \r\n    ORDER_CREATE,\r\n    ORDER_CONFIRM_REJECT,\r\n    ORDER_DELETE,\r\n    SET_BOOKS_INTO_ORDER,\r\n    ADD_BOOK_INTO_ORDER,\r\n    SHOW_APP_WARNING,\r\n    SHOW_APP_SUCCESS\r\n} from './types';\r\nimport axios from 'axios';\r\nimport dispatchError from './dispatchError';\r\nimport { fetchBooks } from './dataActions';\r\n\r\naxios.defaults.headers.common['Authorization'] = localStorage.getItem('jwt_token')\r\n\r\n\r\nexport const showAppWarning = ( message ) => dispatch => { \r\n    dispatch({\r\n        type: SHOW_APP_WARNING,\r\n        payload: message\r\n    });\r\n};\r\n\r\nconst dispatchSuccess = (message, dispatch)=> dispatch({\r\n    type: RESPONSE_MESSAGE_SUCCESS,\r\n    payload: message\r\n});\r\n\r\nexport const updateUser = ({ userId, email, password, fullname, role, phone }) => dispatch => {   \r\n    axios.put(`/update-user/${ userId }`,{ email, password, fullname, role, phone })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        dispatch({\r\n            type: USER_UPDATED,\r\n            payload: json.user\r\n        });\r\n        dispatchSuccess(json.message,dispatch);\r\n\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const deleteUser = ({ userId }) => dispatch => {   \r\n    axios.delete(`/delete-user/${ userId }`)\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: USER_DELETED,\r\n            payload: json.user\r\n        });\r\n\r\n        dispatchSuccess(json.message,dispatch);\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const addBook = ({ name, author, pagesNumber, category, description, price, count }) => dispatch => {   \r\n    axios.post(`/add-book`,{ name, author, pagesNumber, category, description, price, count })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: ADD_BOOK,\r\n            payload: json.book\r\n        });\r\n        fetchBooks()(dispatch);\r\n        dispatchSuccess(json.message,dispatch);\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const deleteBook = ({ bookId }) => dispatch => {   \r\n    axios.delete(`/delete-book/${bookId}`)\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: DELETE_BOOK,\r\n            payload: json.book\r\n        });\r\n\r\n        dispatchSuccess(json.message,dispatch);\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const updateBook = ({ bookId, name, author, pagesNumber, category, description, price, count }) => dispatch => {   \r\n    axios.put(`/update-book/${ bookId }`,{ name, author, pagesNumber, category, description, price, count })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: UPDATE_BOOK,\r\n            payload: json.book\r\n        });\r\n\r\n        dispatchSuccess(json.message,dispatch);\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const createOrder = ({ orderNumber, description, orderedBooks }) => dispatch => {   \r\n    axios.post(`/create-order`,{ orderNumber, description, orderedBooks })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: ORDER_CREATE,\r\n            payload: json.order\r\n        });\r\n\r\n        dispatchSuccess(json.message,dispatch);\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n}\r\n\r\nexport const confirmRejectOrder = ({ confirm, id, statusDescription }) => dispatch => {   \r\n    axios.post(`/confirm-reject-order`,{ confirm, id, statusDescription })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: ORDER_CONFIRM_REJECT,\r\n            payload: json.order.status\r\n        });\r\n\r\n        dispatchSuccess(json.message,dispatch);\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n}\r\n\r\nexport const deleteOrder = ({ id }) => dispatch => {   \r\n    axios.delete(`/delete-order/${ id }`,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then(res => res.data)\r\n    .then(json => {    \r\n        dispatch({\r\n            type: ORDER_DELETE,\r\n            payload: json.order\r\n        });\r\n        dispatchSuccess(json.message,dispatch);\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n}\r\n\r\nexport const setBooksIntoOrder = ({ orderedBooks, message }) => dispatch => { \r\n    dispatch({\r\n        type: SET_BOOKS_INTO_ORDER,\r\n        payload: orderedBooks\r\n    });\r\n};\r\n\r\nexport const addBookIntoOrder = ({ book, message }) => dispatch => { \r\n    dispatch({\r\n        type: ADD_BOOK_INTO_ORDER,\r\n        payload: book\r\n    });\r\n    dispatch({\r\n        type: SHOW_APP_SUCCESS,\r\n        payload: message\r\n    });\r\n};","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass ModalComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      fields: {}\r\n    };\r\n    //field {\r\n    //  name title type value\r\n    //}\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.fields && this.props.fields.length){\r\n      const fields = {};\r\n      this.props.fields.forEach((field)=>{\r\n        fields[field.name] = field;\r\n      });\r\n      this.setState({\r\n        fields\r\n      });\r\n    }\r\n  }\r\n  \r\n\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const bodyEntry = [];\r\n    if(Object.keys(this.state.fields).length){\r\n      for(let _field in this.state.fields){\r\n        const field = this.state.fields[_field];\r\n        bodyEntry.push(\r\n          <FormGroup key={field.name}>\r\n              <Label>{field.title}</Label>\r\n              <Input \r\n                  type={field.type} \r\n                  onChange={(e)=>{\r\n                    //console.log('Field in handler',field);\r\n                    this.setState({\r\n                      fields: {\r\n                        ...this.state.fields, \r\n                        [field.name]: {...this.state.fields[field.name], value: e.target.value}\r\n                      }\r\n                    });\r\n                  }}\r\n                  value={this.state.fields[field.name].value}\r\n              />\r\n          </FormGroup>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <Button color={this.props.btnColor} onClick={this.toggle}>{this.props.buttonLabel}</Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>{this.props.title}</ModalHeader>\r\n          <ModalBody>\r\n            {bodyEntry}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"success\" onClick={()=>{\r\n                this.toggle();\r\n                const fields = {};\r\n                for (const key in this.state.fields) {\r\n                  if(this.state.fields[key].value){\r\n                    fields[key] = this.state.fields[key].value;\r\n                  }\r\n                }\r\n                this.props.resolve(fields);\r\n            }}>Ok</Button>{' '}\r\n            <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalComponent;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport config from '../config';  \r\nimport NavCurrentOrder from '../components/NavCurrentOrder';\r\nimport { addBook } from '../actions/doActions';\r\nimport ModalComponent from '../components/ModalComponent';\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false,\r\n      booksNubmer: 0\r\n    };\r\n    this.addBook = this.addBook.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.orderedBooks){\r\n      let booksCount = 0;\r\n      nextProps.orderedBooks.forEach(book => {\r\n        booksCount+=book.count;\r\n      });\r\n      this.setState({\r\n        booksNubmer: booksCount\r\n      });\r\n    }\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  addBook({ name, author, pagesNumber, category, description, price, count }){\r\n    this.props.addBook({ name, author, pagesNumber, category, description, price, count });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='nav-bar-container'>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"#/sign-in\">Library</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              \r\n              {(this.props.user && this.props.user.role===config.ROLE_USER)?(\r\n                <NavItem>\r\n                <NavLink >\r\n                  <NavCurrentOrder \r\n                    booksNumber={ this.state.booksNubmer }\r\n                    handleClick={ this.props.showCurrentOrder }\r\n                  />\r\n                </NavLink>\r\n              </NavItem>):('')}\r\n              <NavItem>\r\n                <NavLink onClick={this.props.showBooksCatalog}>Books catalog</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink onClick={this.props.showOrders}>Orders</NavLink>\r\n              </NavItem>\r\n              {(this.props.user && this.props.user.role===config.ROLE_ADMIN)?(\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret>\r\n                    Admin Options\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    <DropdownItem>\r\n                    <ModalComponent \r\n                        buttonLabel='Add new book'\r\n                        title='Add new book'\r\n                        resolve={(fields)=>{\r\n                          const { name, author, pagesNumber, category, description, price, count } = fields;\r\n                          this.addBook({ name, author, pagesNumber, category, description, price, count });\r\n                        }}\r\n                        btnColor='primary'\r\n                        fields={[\r\n                          { title:'Name', name:'name', type:'text',value:''},\r\n                          { title:'Author', name:'author', type:'text',value:''},\r\n                          { title:'Pages', name:'pagesNumber', type:'number',value:0},\r\n                          { title:'Category', name:'category', type:'number',value:0},\r\n                          { title:'Description', name:'description', type:'text',value:''},\r\n                          { title:'Price', name:'price', type:'number',value:0},\r\n                          { title:'Count', name:'count', type:'number',value:1}\r\n                        ]}\r\n                    />\r\n                    </DropdownItem>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>\r\n                      Disabled option\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>):('')\r\n              }\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user,\r\n  orderedBooks: state.currentOrder.orderedBooks\r\n});\r\nexport default connect(mapStateToProps,{ addBook })(NavBar);","import React, {Component} from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport NavBar from '../containers/NavBar';\r\n\r\nclass MainTemplate extends Component {\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n            <NavBar \r\n                showBooksCatalog={this.props.showBooksCatalog}\r\n                showOrders={this.props.showOrders}\r\n                showCurrentOrder={this.props.showCurrentOrder}\r\n            />\r\n            <Container className='app-container main-container' >\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <Col xs={10}>\r\n                        {this.props.children}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </React.Fragment>\r\n        \r\n    )\r\n  }\r\n}\r\n\r\nexport default MainTemplate\r\n\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle } from 'reactstrap';\r\nimport img from '../images/book.jpeg' \r\nimport config from '../config'; \r\nimport ModalComponent from './ModalComponent';\r\n\r\nconst CardComponent = (props) => {\r\n  return (\r\n      <Card className='card-container'>\r\n        <CardImg src={img} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle>{props.name}</CardTitle>\r\n          <CardSubtitle>Author: {props.author}</CardSubtitle>\r\n          <CardSubtitle>Price: {props.price}</CardSubtitle>\r\n          <CardSubtitle>Category: {props.category}</CardSubtitle>\r\n          <CardSubtitle>Availability: {props.count}</CardSubtitle>\r\n          <CardText>{props.description}</CardText>\r\n          <div className='btn-group-custom'>\r\n            {props.role===config.ROLE_USER?\r\n              (<ModalComponent \r\n                    buttonLabel='Buy'\r\n                    title='Should put this book into order?'\r\n                    resolve={(fields)=>{\r\n                      const { count } = fields;\r\n                      if(count <= props.count){\r\n                        props.addBook({count,bookId: props._id});\r\n                      }else{\r\n                        props.showWarning(`Books count must be less than ${props.count+1}`);\r\n                      }\r\n                    }}\r\n                    btnColor='success'\r\n                    fields={[\r\n                      { title:'Count', name:'count', type:'number',value:1}\r\n                    ]}\r\n                />):\r\n              (<>\r\n                <ModalComponent \r\n                    buttonLabel='Delete book'\r\n                    title='Should delete this book?'\r\n                    resolve={()=>{\r\n                      props.handleDeleteBook(props._id);\r\n                    }}\r\n                    btnColor='danger'\r\n                />\r\n                <ModalComponent \r\n                    buttonLabel='Update'\r\n                    title='Update book'\r\n                    resolve={(fields)=>{\r\n                      const {name, author, countPagesNumber, countCategory, description, countPrice, count} = fields;\r\n                      const bookId = props._id;\r\n                      props.handleUpdateBook({ bookId, name, author, countPagesNumber, countCategory, description, countPrice, count });\r\n                    }}\r\n                    btnColor='primary'\r\n                    fields={[\r\n                      { title:'Name', name:'name', type:'text',value:props.name},\r\n                      { title:'Author', name:'author', type:'text',value:props.author},\r\n                      { title:'Pages', name:'countPagesNumber', type:'number',value:props.pagesNumber},\r\n                      { title:'Category', name:'countCategory', type:'number',value:props.category},\r\n                      { title:'Description', name:'description', type:'text',value:props.description},\r\n                      { title:'Price', name:'countPrice', type:'number',value:props.price},\r\n                      { title:'Count', name:'count', type:'number',value:props.count}\r\n                    ]}\r\n                />\r\n              </>)\r\n            }\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default CardComponent;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchBooks } from '../actions/dataActions';\r\nimport { getUser } from '../actions/authActions';\r\nimport { deleteBook, updateBook, addBookIntoOrder, showAppWarning } from '../actions/doActions';\r\nimport CardComponent from './CardComponent'\r\n\r\nclass BooksCatalog extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books:[]\r\n        };\r\n        this.handleDeleteBook = this.handleDeleteBook.bind(this);\r\n        this.handleUpdateBook = this.handleUpdateBook.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchBooks();\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.books){\r\n            this.setState({books: nextProps.books})\r\n        }\r\n    }\r\n    handleDeleteBook(id){\r\n        if(id){\r\n            this.props.deleteBook({bookId:id});\r\n        }else{\r\n            console.log('Expects _id:', id)\r\n        }\r\n        const newBooks = this.state.books.filter((book)=>{\r\n            return book._id !== id;\r\n        });\r\n        this.setState({\r\n            books: newBooks\r\n        }); \r\n    }\r\n    handleUpdateBook({ bookId, name, author, countPagesNumber, countCategory, description, countPrice, count }){\r\n        const pagesNumber = countPagesNumber;\r\n        const category = countCategory;\r\n        const price = countPrice;\r\n        if(bookId){\r\n            this.props.updateBook({ bookId, name, author, pagesNumber, category, description, price, count });\r\n        }else{\r\n            console.log('Expects _id:', bookId)\r\n        }\r\n        const newBooks = this.state.books.filter((book)=>{\r\n            return book._id !== bookId;\r\n        });\r\n        newBooks.unshift({\r\n            bookId, name, author, pagesNumber, category, description, price, count\r\n        });\r\n        this.setState({\r\n            books: newBooks\r\n        });\r\n    }\r\n    addBook({count,bookId}){\r\n        if(bookId){\r\n            const book = {count,bookId};\r\n            const message = 'Books successfully added to current order';\r\n            this.props.addBookIntoOrder({book,message});\r\n        }else{\r\n            console.log('Expects _id',bookId);\r\n        }\r\n    }\r\n    showWarning(message){\r\n        this.props.showAppWarning(message);\r\n    }  \r\n    render() { \r\n        const books = this.state.books.map((book,i)=>\r\n            <li key={i}>\r\n                <CardComponent \r\n                {...book} \r\n                role={this.props.user.role}\r\n                showWarning={(message)=>{this.showWarning(message)}}\r\n                addBook={({count,bookId})=>{this.addBook({count,bookId});}}\r\n                handleDeleteBook={(id)=>{this.handleDeleteBook(id)}}\r\n                handleUpdateBook={({ bookId, name, author, countPagesNumber, countCategory, description, countPrice, count })=>{\r\n                    this.handleUpdateBook({ bookId, name, author, countPagesNumber, countCategory, description, countPrice, count });\r\n                }}\r\n                />\r\n            </li>\r\n        );\r\n        const rendered = books.length?books:'Loading...';\r\n        return (\r\n          <div className='books-catalog-wrapper' >\r\n            <ul>\r\n                {rendered}\r\n            </ul>\r\n          </div>\r\n        );\r\n    };\r\n}\r\nconst mapStateToProps = state => ({\r\n    books: state.data.books,\r\n    user: state.auth.user\r\n});\r\nexport default connect(mapStateToProps,{ \r\n    fetchBooks, \r\n    getUser, \r\n    deleteBook, \r\n    updateBook, \r\n    showAppWarning, \r\n    addBookIntoOrder \r\n})(BooksCatalog);","import React, { Component } from 'react'\r\nimport { Card, CardText, CardBody,\r\n  CardTitle, Badge } from 'reactstrap';\r\nimport config from '../config'; \r\nimport ModalComponent from './ModalComponent';\r\n\r\n\r\nexport class OrderComponent extends Component {\r\n  render() {\r\n    const orderedBooks = this.props.orderedBooks.map((book)=>\r\n    <li key={book.bookDetails._id} className='ordered-books'>\r\n        <div className='book-info-wrapper'>\r\n            <span>Name: {book.bookDetails.name}</span>\r\n            <span>Author: {book.bookDetails.Author}</span>\r\n            <span>Count: {book.count}</span>\r\n            <span>Price: {book.bookDetails.price}</span>\r\n        </div>\r\n    </li>\r\n  );\r\n  let status;\r\n    switch(this.props.status){\r\n        case config.ORDER_STATUS_INPROCESS: status = (<Badge disabled color='warning'>In progress</Badge>);break;\r\n        case config.ORDER_STATUS_NEW:       status = (<Badge disabled color='primary'>New order</Badge>);break;\r\n        case config.ORDER_STATUS_SUCCESS:   status = (<Badge disabled color='success'>Already complited</Badge>);break;\r\n        case config.ORDER_STATUS_REJECTED:  status = (<Badge disabled color='danger' >Already rejected</Badge>);break;\r\n        default: status = 'No status found'\r\n    }\r\n  return (\r\n      <Card className='card-container'>\r\n        <CardBody>\r\n          <CardTitle>Order Number: {this.props.orderNumber}</CardTitle>\r\n          <CardText><b>Summary:</b> {this.props.summary}</CardText>\r\n          <CardText><b>Status:</b> {status}</CardText>\r\n          <CardText><b>Description:</b> {this.props.description}</CardText>\r\n          {this.props.statusDescription?(<CardText><b>Status Description:</b> {this.props.statusDescription}</CardText>):(<></>)}\r\n          {orderedBooks.length?(<ul><b>Ordered Books:</b> {orderedBooks}</ul>):(<b>No books here! <br/></b>)}\r\n          <div className='btn-group-custom'>\r\n            {this.props.role===config.ROLE_ADMIN?\r\n              (<>\r\n                <ModalComponent \r\n                    buttonLabel='Confirm'\r\n                    title='Confirm order?'\r\n                    resolve={(fields)=>{\r\n                        const { statusDescription } = fields;\r\n                        if(statusDescription){\r\n                            this.props.resolveRejectOrder(this.props._id,true,statusDescription)\r\n                        }else{\r\n                            this.props.resolveRejectOrder(this.props._id,true)\r\n                        }\r\n                    }}\r\n                    btnColor='success'\r\n                    fields={[\r\n                        { title:'Description', name:'statusDescription', type:'text',value:''}\r\n                    ]}\r\n                />\r\n                <ModalComponent \r\n                    buttonLabel='Reject'\r\n                    title='Reject order?'\r\n                    resolve={()=>{\r\n                        this.props.resolveRejectOrder(this.props._id,false)\r\n                    }}\r\n                />\r\n                <ModalComponent \r\n                    buttonLabel='Delete'\r\n                    title='Delete order?'\r\n                    resolve={()=>{\r\n                        this.props.deleteOrderById(this.props._id)\r\n                    }}\r\n                    btnColor='danger'\r\n                />\r\n              </>):\r\n              (<></>)\r\n            }\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n  );\r\n  }\r\n}\r\n\r\nexport default OrderComponent","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchOrders } from '../actions/dataActions';\r\nimport { deleteOrder, confirmRejectOrder } from '../actions/doActions';\r\nimport OrderComponent from './OrderComponent'\r\n\r\nclass OrdersList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            orders:[],\r\n            orderStatus:null\r\n        };\r\n        this.deleteOrderById = this.deleteOrderById.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchOrders();\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        console.log('Redeived props:', nextProps)\r\n        if(nextProps.orders){\r\n            this.setState({orders: nextProps.orders})\r\n        }\r\n        if(nextProps.orderStatus !==this.state.orderStatus){\r\n            this.setState({orderStatus: nextProps.orderStatus})\r\n            this.props.fetchOrders();\r\n        }\r\n    }\r\n    deleteOrderById(id){\r\n        if(id){\r\n            this.props.deleteOrder({id});\r\n        }else{\r\n            console.log('Expects _id:', id)\r\n        }\r\n        const newOrders = this.state.orders.filter((order)=>{\r\n            return order._id !== id;\r\n        });\r\n        this.setState({\r\n            orders: newOrders\r\n        });\r\n    }\r\n    resolveRejectOrder(id,confirm,statusDescription){\r\n        if(id){\r\n            this.props.confirmRejectOrder({ confirm, id, statusDescription });\r\n        }else{\r\n            console.log('Expects _id:', id)\r\n        }\r\n        \r\n    }  \r\n    render() { \r\n        console.log(this.props)\r\n        let role = this.props.user?this.props.user.role:1;\r\n        const orders = this.state.orders.map((order)=>\r\n            <li key={order._id}><OrderComponent \r\n                {...order} \r\n                role={role} \r\n                deleteOrderById={(id)=>{this.deleteOrderById(id)}}\r\n                resolveRejectOrder={(id,confirm,statusDescription)=>{this.resolveRejectOrder(id,confirm,statusDescription)}}\r\n            /></li>\r\n        );\r\n        const rendered = orders.length?orders:'Loading...';\r\n        return (\r\n          <div className='books-catalog-wrapper' >\r\n            <ul>\r\n                {rendered}\r\n            </ul>\r\n          </div>\r\n        );\r\n    };\r\n}\r\nconst mapStateToProps = state => ({\r\n    orders: state.data.orders,\r\n    user: state.auth.user,\r\n    orderStatus: state.do.orderStatus\r\n});\r\nexport default connect(mapStateToProps,{ fetchOrders, deleteOrder, confirmRejectOrder })(OrdersList);","import React, { Component } from 'react';\r\nimport config from '../config'; \r\nimport { connect } from 'react-redux';\r\nimport { createOrder, setBooksIntoOrder } from '../actions/doActions';\r\nimport { Card,  CardBody, Badge,FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport ModalComponent from './ModalComponent';\r\n\r\nclass CurrentOrder extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            orderNumber:Math.round(Math.random()*100000),\r\n            description:'',\r\n            orderedBooks:[],\r\n            books:[]\r\n        };\r\n        this.resetOrder = this.resetOrder.bind(this)\r\n    }\r\n    resetOrder(){\r\n        const orderedBooks = [];\r\n        const message = 'Order cleaned!';\r\n        this.props.setBooksIntoOrder({ orderedBooks, message });\r\n        this.setState({\r\n            description:'',\r\n            orderedBooks:[]\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.showStyle==='block'){return;}\r\n        if(nextProps.orderedBooks){ // orderedBooks { bookId, count }\r\n            //console.log('nextProps.orderedBooks',nextProps.orderedBooks);\r\n            const orderedBooks = [];\r\n            this.state.books.forEach((book)=>{\r\n                for(let i = 0 ; i < nextProps.orderedBooks.length; i++){\r\n                    if(nextProps.orderedBooks[i].bookId === book._id){\r\n                        orderedBooks.push({\r\n                            bookId: book._id,\r\n                            name: book.name,\r\n                            author: book.author,\r\n                            price: book.price,\r\n                            count: nextProps.orderedBooks[i].count\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            this.setState({\r\n                orderedBooks\r\n            });\r\n        }\r\n        if(nextProps.books){\r\n            this.setState({\r\n                books: nextProps.books\r\n            });\r\n        }\r\n    }\r\n    render() { \r\n        const orderedBooks = this.state.orderedBooks.map((book,i)=>\r\n          <li key={i} className='ordered-books'>\r\n              <div className='book-info-wrapper'>\r\n                  <span>Name: {book.name}</span>\r\n                  <span>Author: {book.author}</span>\r\n                  <span>Count: {book.count}</span>\r\n                  <span>Price: {book.price}</span>\r\n              </div>\r\n          </li>\r\n        );\r\n        let summary = 0;\r\n        this.state.orderedBooks.forEach((book)=>{\r\n            summary+= book.price * book.count;\r\n        });\r\n        return (\r\n          <div className='books-catalog-wrapper' style={{paddingTop:'15px', display: this.props.showStyle}}>\r\n            <Card className='card-container'>\r\n              <CardBody>\r\n                <div> \r\n                    <FormGroup>\r\n                        <Label>Order Number:</Label>\r\n                        <Input \r\n                            type='number'\r\n                            onChange={(e)=>{\r\n                              this.setState({orderNumber: e.target.value})\r\n                            }}\r\n                            value={this.state.orderNumber}\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                <div>Summary: {summary}$</div>\r\n                <div>Status: <Badge disabled color='warning'>In progress</Badge></div>\r\n                <div>\r\n                    <FormGroup>\r\n                        <Label>Description:</Label>\r\n                        <Input \r\n                            type='textarea'\r\n                            onChange={(e)=>{\r\n                              this.setState({description: e.target.value})\r\n                            }}\r\n                            value={this.state.description}\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                {orderedBooks.length?(<ul><b>Ordered Books:</b> {orderedBooks}</ul>):(<b>No books here! <br/></b>)}\r\n                <div className='btn-group-custom'>\r\n                    <ModalComponent \r\n                        btnColor='success'\r\n                        buttonLabel='Confirm order'\r\n                        title='Confirm order?'\r\n                        resolve={()=>{\r\n                            const { orderNumber, description, orderedBooks } = this.state;\r\n                            this.props.createOrder({ orderNumber, description, orderedBooks });\r\n                        }}\r\n                    />\r\n                    <ModalComponent \r\n                        btnColor='danger'\r\n                        buttonLabel='Reset'\r\n                        title='Reset order?'\r\n                        resolve={()=>{\r\n                            this.resetOrder();\r\n                        }}\r\n                    />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        );\r\n    };\r\n}\r\nconst mapStateToProps = state => ({\r\n    orderedBooks: state.currentOrder.orderedBooks,\r\n    books: state.data.books,\r\n});\r\nexport default connect(mapStateToProps,{ createOrder, setBooksIntoOrder })(CurrentOrder);","import React, { Component } from 'react';\r\nimport { getUser } from '../actions/authActions'\r\nimport MainTemplate from '../templates/MainTemplate';\r\nimport BooksCatalog from '../components/BooksCatalog';\r\nimport OrdersList from '../components/OrdersList';\r\nimport CurrentOrder from '../components/CurrentOrder';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nexport class Main extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        activeComponent: 'BooksCatalog'\r\n    };\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n    this.showBooksCatalog = this.showBooksCatalog.bind(this);\r\n    this.showOrders = this.showOrders.bind(this);\r\n    this.showCurrentOrder = this.showCurrentOrder.bind(this);\r\n  }  \r\n  \r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.unauthorizated){\r\n        console.log('Redirecring to login page... ');\r\n        this.props.history.push('/sign-in');\r\n    }\r\n  } \r\n   \r\n  handleSignIn(e){\r\n    e.preventDefault();\r\n    this.props.authorizate({\r\n        login: this.state.login,\r\n        password: this.state.password\r\n    });\r\n  }\r\n  showBooksCatalog(){\r\n    this.setState({\r\n        activeComponent: 'BooksCatalog'\r\n    });\r\n  }\r\n  showOrders(){\r\n    this.setState({\r\n        activeComponent: 'OrdersList'\r\n    });\r\n  }\r\n  showCurrentOrder(){\r\n    this.setState({\r\n        activeComponent: 'CurrentOrder'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let activeComponent;\r\n    switch(this.state.activeComponent){\r\n        case 'BooksCatalog': activeComponent = (<BooksCatalog />);break;\r\n        case 'OrdersList': activeComponent = (<OrdersList />);break;\r\n        default: activeComponent = (<></>);\r\n    }\r\n    const currentOrderStyle = (this.state.activeComponent==='CurrentOrder')?'block':'none';\r\n    return (\r\n        <MainTemplate \r\n            showBooksCatalog={this.showBooksCatalog}\r\n            showOrders={this.showOrders}\r\n            showCurrentOrder={this.showCurrentOrder}\r\n        >\r\n            <CurrentOrder showStyle={currentOrderStyle}/>\r\n            {activeComponent}\r\n        </MainTemplate>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    unauthorizated: state.message.unauthorizated,\r\n});\r\n\r\nexport default connect(mapStateToProps,{ getUser })(Main)\r\n","import { FETCH_BOOKS, FETCH_ORDERS, USERS_GET } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    books: null,\r\n    orders: null,\r\n    users: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_BOOKS:\r\n            return {\r\n                ...state,\r\n                books: action.payload\r\n            };\r\n        case FETCH_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload\r\n            }; \r\n        case USERS_GET:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SIGN_UP , SIGN_IN , USER_GET} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: null,\r\n    user: JSON.parse(localStorage.getItem(\"user\"))\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return {\r\n                ...state,\r\n                token: action.payload\r\n            };\r\n        case SIGN_UP:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case USER_GET:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { \r\n    USER_UPDATED,\r\n    USER_DELETED, \r\n    ADD_BOOK, \r\n    DELETE_BOOK, \r\n    UPDATE_BOOK, \r\n    ORDER_CREATE,\r\n    ORDER_DELETE,\r\n    ORDER_CONFIRM_REJECT\r\n } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n    book: null,\r\n    order: null,\r\n    orderStatus: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_UPDATED:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }; \r\n        case USER_DELETED:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case ADD_BOOK:\r\n            return {\r\n                ...state,\r\n                book: action.payload\r\n            }; \r\n        case DELETE_BOOK:\r\n            return {\r\n                ...state,\r\n                book: action.payload\r\n            };\r\n        case UPDATE_BOOK:\r\n            return {\r\n                ...state,\r\n                book: action.payload\r\n            };\r\n        case ORDER_CREATE:\r\n            return {\r\n                ...state,\r\n                order: action.payload\r\n            };\r\n        case ORDER_DELETE:\r\n            return {\r\n                ...state,\r\n                order: action.payload\r\n            };\r\n        case ORDER_CONFIRM_REJECT:\r\n            return {\r\n                ...state,\r\n                orderStatus: action.payload\r\n            };          \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { \r\n    RESPONSE_MESSAGE_ERROR, \r\n    RESPONSE_MESSAGE_SUCCESS, \r\n    SET_UNAUTHORIZATED, \r\n    SHOW_APP_WARNING, \r\n    SHOW_APP_SUCCESS \r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    message: {\r\n        titleResolve: 'Ok',\r\n        text:null\r\n    },\r\n    unauthorizated: false\r\n};\r\n//message = {\r\n//    titleResolve: 'Ok',\r\n//    titleReject: 'Ok',\r\n//    reolve: ()=>{},\r\n//    reject: ()=>{},\r\n//    type: 'success'\r\n//};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case RESPONSE_MESSAGE_ERROR:\r\n            return {\r\n                ...state,\r\n                message: {...state.message, text: action.payload, type: 'error'}\r\n            };\r\n        case RESPONSE_MESSAGE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                message: {...state.message, text: action.payload, type: 'success'}\r\n            };\r\n        case SHOW_APP_WARNING:\r\n            return {\r\n                ...state,\r\n                message: {...state.message, text: action.payload, type: 'error'}\r\n            };\r\n        case SHOW_APP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                message: {...state.message, text: action.payload, type: 'success'}\r\n            };        \r\n        case SET_UNAUTHORIZATED:\r\n            return {\r\n                ...state,\r\n                unauthorizated: action.payload\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { \r\n    SET_BOOKS_INTO_ORDER, \r\n    ADD_BOOK_INTO_ORDER\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    orderedBooks: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_BOOKS_INTO_ORDER:\r\n            return {\r\n                ...state,\r\n                orderedBooks: action.payload\r\n            };\r\n        case ADD_BOOK_INTO_ORDER:\r\n            return {\r\n                ...state,\r\n                orderedBooks: [...state.orderedBooks, action.payload]\r\n            };        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport dataReducer from './dataReducer';\r\nimport authReducer from './authReducer';\r\nimport doReducer from './doReducer';\r\nimport messageReducer from './messageReducer';\r\nimport currentOrderReducer from './currentOrderReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  data: dataReducer,\r\n  do: doReducer,\r\n  message: messageReducer,\r\n  currentOrder: currentOrderReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { HashRouter,  Route, Switch } from 'react-router-dom'\nimport SignIn from './containers/SignIn'\nimport SignUp from './containers/SignUp'\nimport MessageModal from './containers/MessageModal';\nimport Main from './containers/Main'\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <div className=\"App\">\n       <MessageModal />\n       <HashRouter >\n         <Switch>\n          <Route exact path='/' component={ Main } />\n          <Route exact path='/sign-in' component={ SignIn } />\n          <Route exact path='/sign-up' component={ SignUp } />\n         </Switch>\n       </HashRouter>\n      </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}