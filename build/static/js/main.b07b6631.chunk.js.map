{"version":3,"sources":["images/book.jpeg","actions/dispatchError.js","actions/types.js","actions/authActions.js","components/Modal.js","containers/MessageModal.js","templates/AuthTemplate.js","containers/SignIn.js","containers/SignUp.js","config.js","components/NavCurrentOrder.js","actions/dataActions.js","actions/doActions.js","components/ModalComponent.js","containers/NavBar.js","templates/MainTemplate.js","components/CardComponent.js","components/BooksCatalog.js","components/OrderComponent.js","components/OrdersList.js","components/CurrentOrder.js","containers/Main.js","reducers/dataReducer.js","reducers/authReducer.js","reducers/doReducer.js","reducers/messageReducer.js","reducers/currentOrderReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","dispatchError","err","dispatch","console","log","response","type","payload","data","message","toString","status","axios","defaults","headers","common","localStorage","getItem","dispatchSuccess","getUser","get","then","res","json","user","catch","Modal","_this","this","setTimeout","props","forceUnmount","_this$props","titleResolve","titleReject","resolve","reject","buttonResolve","react_default","a","createElement","reactstrap_es","color","onClick","buttonReject","styledBorder","border","className","style","background","Component","MessageModal","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","messages","currentID","deleteById","bind","assertThisInitialized","inherits","createClass","key","value","id","filter","messageObj","setState","nextProps","toConsumableArray","concat","text","_this2","modals","map","components_Modal","connect","AuthTemplate","_ref","children","xs","SignIn","login","password","handleSignIn","setUnauthorizated","token","history","push","e","preventDefault","authorizate","_this3","for","name","placeholder","onChange","target","Link","to","auth","_ref3","post","email","setItem","JSON","stringify","param","SignUp","passwordConfirm","fullname","phone","handleSignUp","_this$state","register","registerFailed","_ref4","_ref2","config","NavCurrentOrder","handleClick","marginLeft","booksNumber","fetchBooks","books","ModalComponent","modal","fields","toggle","length","forEach","field","bodyEntry","keys","_loop","_field","title","objectSpread","defineProperty","btnColor","buttonLabel","isOpen","React","NavBar","booksNubmer","addBook","orderedBooks","booksCount","book","count","author","pagesNumber","category","description","price","light","expand","href","navbar","role","showCurrentOrder","showBooksCatalog","showOrders","nav","inNavbar","caret","right","components_ModalComponent","divider","currentOrder","MainTemplate","Fragment","containers_NavBar","CardComponent","src","img","alt","parseInt","bookId","_id","showWarning","handleDeleteBook","countPagesNumber","countCategory","countPrice","handleUpdateBook","BooksCatalog","deleteBook","newBooks","updateBook","unshift","addBookIntoOrder","showAppWarning","i","components_CardComponent","assign","rendered","delete","_ref5","put","_ref10","OrderComponent","apply","arguments","bookDetails","Author","disabled","orderNumber","summary","statusDescription","resolveRejectOrder","deleteOrderById","OrdersList","orders","orderStatus","fetchOrders","deleteOrder","newOrders","order","confirm","confirmRejectOrder","components_OrderComponent","components_OrdersList","do","_ref8","Content-Type","_ref7","CurrentOrder","Math","round","random","resetOrder","setBooksIntoOrder","showStyle","paddingTop","display","_this2$state","createOrder","_ref6","_ref9","Main","activeComponent","unauthorizated","components_BooksCatalog","currentOrderStyle","templates_MainTemplate","components_CurrentOrder","initialState","users","parse","combineReducers","undefined","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","containers_MessageModal","HashRouter","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sTCOzBC,EAAA,SAACC,EAAKC,GACjBC,QAAQC,IAAI,eAAeH,EAAII,UAO/BH,EAAS,CACLI,KCX8B,yBDY9BC,SAPDN,EAAII,UAAYJ,EAAII,SAASG,MAAQP,EAAII,SAASG,KAAKC,QAC5CR,EAAII,SAASG,KAAKC,QAElBR,GAIOS,aAElBT,GAAOA,EAAII,UAAkC,MAAtBJ,EAAII,SAASM,QACnCT,EAAS,CACLI,KCJsB,qBDKtBC,SAAS,KElBrBK,IAAMC,SAASC,QAAQC,OAAvB,cAAiDC,aAAaC,QAAQ,aAEtE,IAAMC,EAAkB,SAACT,EAASP,GAAV,OAAsBA,EAAS,CACnDI,KDDoC,2BCEpCC,QAASE,KAgEAU,EAAU,kBAAM,SAAAjB,GACzBU,IAAMQ,IAAI,aACTC,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GAEFrB,EAAS,CACLI,KDvEY,WCwEZC,QAASgB,EAAKC,SAIrBC,MAAM,SAAAxB,GAAG,OAAED,EAAcC,EAAIC,eCnBnBwB,8LA7DO,IAAAC,EAAAC,KAClBC,WAAW,WACTF,EAAKG,MAAMC,gBACV,sCAEI,IAAAC,EAQHJ,KAAKE,MANPrB,EAFKuB,EAELvB,QACAwB,EAHKD,EAGLC,aACAC,EAJKF,EAILE,YACAC,EALKH,EAKLG,QACAC,EANKJ,EAMLI,OACA9B,EAPK0B,EAOL1B,KAEE+B,EACFJ,GAAgBE,EACdG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASR,GAC9BF,GAGH,GAEAW,EACFV,GAAeE,EACbE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAASP,GAC7BF,GAGH,GAEAW,EAAe,GACnB,OAAQvC,GACN,IAAK,UACHuC,EAAe,CACbC,OAAQ,mBAEV,MACF,IAAK,QACHD,EAAe,CACbC,OAAQ,iBAEV,MACF,QACED,EAAe,CACbC,OAAQ,mBAId,OACER,EAAAC,EAAAC,cAAA,OAAKO,UAAU,eAAeC,MAAOH,GACnCP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMO,MAAO,CAAEC,WAAY,iBAAkBP,MAAO,UAClDJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAWhC,GACV4B,EACAO,YAvDOM,aCEPC,EAAb,SAAAC,GACE,SAAAD,EAAYrB,GAAO,IAAAH,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAuB,IACjBxB,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA7B,KAAME,KACD4B,MAAQ,CACXC,SAAU,GACVC,UAAW,GAEbjC,EAAKkC,WAAalC,EAAKkC,WAAWC,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KANDA,EADrB,OAAA0B,OAAAW,EAAA,EAAAX,CAAAF,EAAAC,GAAAC,OAAAY,EAAA,EAAAZ,CAAAF,EAAA,EAAAe,IAAA,aAAAC,MAAA,SASaC,GACT,IAAMT,EAAW/B,KAAK8B,MAAMC,SAASU,OAAO,SAAAC,GAC1C,OAAOA,EAAWF,KAAOA,IAE3BxC,KAAK2C,SAAS,CAAEZ,eAbpB,CAAAO,IAAA,4BAAAC,MAAA,SAe4BK,GACpBA,EAAUF,aACZnE,QAAQC,IAAI,0BAA2BoE,EAAUF,YACjD1C,KAAK2C,SAAS,CACZZ,SAASN,OAAAoB,EAAA,EAAApB,CACJzB,KAAK8B,MAAMC,UADRe,OAAA,CAEN,CACEjE,QAAS+D,EAAUF,WAAWK,KAC9BrE,KAAMkE,EAAUF,WAAWhE,KAC3B2B,aAAcuC,EAAUF,WAAWrC,aACnCC,YAAasC,EAAUF,WAAWpC,YAClCC,QAASqC,EAAUF,WAAWnC,QAC9BC,OAAQoC,EAAUF,WAAWlC,OAC7BgC,GAAIxC,KAAK8B,MAAME,eAIrBhC,KAAK2C,SAAS,CAAEX,UAAWhC,KAAK8B,MAAME,UAAY,OAhCxD,CAAAM,IAAA,SAAAC,MAAA,WAmCW,IAAAS,EAAAhD,KACDiD,EAASjD,KAAK8B,MAAMC,SAASmB,IAAI,SAAAR,GAAU,OAC/ChC,EAAAC,EAAAC,cAACuC,EAAD,CACEb,IAAKI,EAAWF,GAChB3D,QAAS6D,EAAW7D,QACpBH,KAAMgE,EAAWhE,KACjB2B,aAAcqC,EAAWrC,aACzBC,YAAaoC,EAAWpC,YACxBC,QAAS,WAC2B,oBAAvBmC,EAAWnC,SACpBmC,EAAWnC,UAEbyC,EAAKf,WAAWS,EAAWF,KAE7BhC,OAAQ,WAC2B,oBAAtBkC,EAAWlC,QACpBkC,EAAWlC,SAEbwC,EAAKf,WAAWS,EAAWF,KAE7BrC,aAAc,WACZ6C,EAAKf,WAAWS,EAAWF,SAIjC,OAAO9B,EAAAC,EAAAC,cAAA,OAAKO,UAAU,iBAAiB8B,OA5D3C1B,EAAA,CAAkCD,aAoEnB8B,cAJS,SAAAtB,GAAK,MAAK,CAChCY,WAAYZ,EAAMjD,QAAQA,UAK1B,GAFauE,CAGb7B,GCvEF8B,EAAA,SAAeC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACb7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWM,UAAU,gCACnBT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKM,UAAU,6CACbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2C,GAAI,GAAID,cCANE,EAAb,SAAAjC,GACE,SAAAiC,EAAYvD,GAAO,IAAAH,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAyD,IACjB1D,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAgC,GAAA5B,KAAA7B,KAAME,KACD4B,MAAQ,CACX4B,MAAO,GACPC,SAAU,IAEZ5D,EAAK6D,aAAe7D,EAAK6D,aAAa1B,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KANHA,EADrB,OAAA0B,OAAAW,EAAA,EAAAX,CAAAgC,EAAAjC,GAAAC,OAAAY,EAAA,EAAAZ,CAAAgC,EAAA,EAAAnB,IAAA,oBAAAC,MAAA,WAWIvC,KAAKE,MAAM2D,mBAAkB,KAXjC,CAAAvB,IAAA,4BAAAC,MAAA,SAa4BK,GAAW,IAAAI,EAAAhD,KAC/B4C,EAAUkB,QACZvF,QAAQC,IAAI,+BACZyB,WAAW,WACT+C,EAAK9C,MAAM6D,QAAQC,KAAK,UACvB,QAlBT,CAAA1B,IAAA,eAAAC,MAAA,SAqBe0B,GACXA,EAAEC,iBACFlE,KAAKE,MAAMiE,YAAY,CACrBT,MAAO1D,KAAK8B,MAAM4B,MAClBC,SAAU3D,KAAK8B,MAAM6B,aAzB3B,CAAArB,IAAA,SAAAC,MAAA,WA4BW,IAAA6B,EAAApE,KACP,OACEU,EAAAC,EAAAC,cAACyC,EAAD,KACE3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMM,UAAU,aACdT,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwD,IAAI,gBAAX,SACA3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnC,KAAK,QACL4F,KAAK,QACL9B,GAAG,eACH+B,YAAY,aACZC,SAAU,SAAAP,GACRG,EAAKzB,SAAS,CAAEe,MAAOO,EAAEQ,OAAOlC,SAElCA,MAAOvC,KAAK8B,MAAM4B,SAGtBhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwD,IAAI,mBAAX,YACA3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnC,KAAK,WACL4F,KAAK,WACL9B,GAAG,kBACH+B,YAAY,mBACZC,SAAU,SAAAP,GACRG,EAAKzB,SAAS,CAAEgB,SAAUM,EAAEQ,OAAOlC,SAErCA,MAAOvC,KAAK8B,MAAM6B,YAGtBjD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,wBACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAMC,GAAG,YAAT,sBAEFjE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,QAASf,KAAK4D,cAAtB,iBA/DVH,EAAA,CAA4BnC,aAyEb8B,cAJS,SAAAtB,GAAK,MAAK,CAChCgC,MAAOhC,EAAM8C,KAAKd,QAKlB,CAAEK,YJzDuB,SAAAU,GAAA,IAAEnB,EAAFmB,EAAEnB,MAAMC,EAARkB,EAAQlB,SAAR,OAAsB,SAAArF,GAC7CU,IAAM8F,KAAK,QAAQ,CACfC,MAAOrB,EACPC,SAAUA,IAEblE,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GACF,IAAMmE,EAAQ,OAASnE,EAAKmE,MAC5B9E,IAAMC,SAASC,QAAQC,OAAvB,cAAiD2E,EACjD1E,aAAa4F,QAAQ,YAAalB,GAClC1E,aAAa4F,QAAQ,OAAQC,KAAKC,UAAUvF,EAAKC,OAEjDtB,EAAS,CACLI,KDtCW,UCuCXC,QAASmF,IAEbxF,EAAS,CACLI,KDnCY,WCoCZC,QAASgB,EAAKC,OAElBK,WAAW,WACPX,EAAgBK,EAAKd,QAAQP,IAC/B,KAELuB,MAAM,SAAAxB,GAAG,OAAED,EAAcC,EAAIC,OIiCjBuF,kBJvEgB,SAAAP,GAAA,IAAG6B,EAAH7B,EAAG6B,MAAH,OAAe,SAAA7G,GAC5CA,EAAS,CACLI,KDI0B,qBCH1BC,UAAWwG,OIkEJ/B,CAGbK,GC7EW2B,EAAb,SAAA5D,GACE,SAAA4D,EAAYlF,GAAM,IAAAH,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAoF,IACdrF,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAA2D,GAAAvD,KAAA7B,KAAME,KACD4B,MAAQ,CACX4B,MAAM,GACNC,SAAS,GACT0B,gBAAgB,GAChBC,SAAS,GACTC,MAAM,IAERxF,EAAKyF,aAAezF,EAAKyF,aAAatD,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KATNA,EADpB,OAAA0B,OAAAW,EAAA,EAAAX,CAAA2D,EAAA5D,GAAAC,OAAAY,EAAA,EAAAZ,CAAA2D,EAAA,EAAA9C,IAAA,4BAAAC,MAAA,SAY4BK,GAAU,IAAAI,EAAAhD,KAC/B4C,EAAUhD,OACTrB,QAAQC,IAAI,4BACZyB,WAAW,WACP+C,EAAK9C,MAAM6D,QAAQC,KAAK,aAC1B,QAjBV,CAAA1B,IAAA,eAAAC,MAAA,SAsBe0B,GACXA,EAAEC,iBADW,IAAAuB,EAEiDzF,KAAK8B,MAA3D4B,EAFK+B,EAEL/B,MAAOC,EAFF8B,EAEE9B,SAAU0B,EAFZI,EAEYJ,gBAAiBC,EAF7BG,EAE6BH,SAAUC,EAFvCE,EAEuCF,MACjD5B,IAAa0B,EACZrF,KAAKE,MAAMwF,SAAS,CAAEhC,QAAOC,WAAU2B,WAAUC,UAEjDvF,KAAKE,MAAMyF,eAAe,CACtB9G,QAAS,kDA7BrB,CAAAyD,IAAA,SAAAC,MAAA,WAiCW,IAAA6B,EAAApE,KACP,OACIU,EAAAC,EAAAC,cAACyC,EAAD,KACI3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMM,UAAU,aACZT,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwD,IAAI,SAAX,SACA3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACInC,KAAK,QACL4F,KAAK,QACL9B,GAAG,QACH+B,YAAY,aACZC,SAAU,SAACP,GACPG,EAAKzB,SAAS,CAACe,MAAOO,EAAEQ,OAAOlC,SAEnCA,MAAOvC,KAAK8B,MAAM4B,SAG1BhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwD,IAAI,YAAX,YACA3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACInC,KAAK,WACL4F,KAAK,WACL9B,GAAG,WACH+B,YAAY,mBACZC,SAAU,SAACP,GACPG,EAAKzB,SAAS,CAACgB,SAAUM,EAAEQ,OAAOlC,SAEtCA,MAAOvC,KAAK8B,MAAM6B,YAG1BjD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwD,IAAI,mBAAX,oBACA3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACInC,KAAK,WACL4F,KAAK,kBACL9B,GAAG,kBACH+B,YAAY,2BACZC,SAAU,SAACP,GACPG,EAAKzB,SAAS,CAAC0C,gBAAiBpB,EAAEQ,OAAOlC,SAE7CA,MAAOvC,KAAK8B,MAAMuD,mBAG1B3E,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwD,IAAI,YAAX,YACA3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACInC,KAAK,OACL4F,KAAK,WACL9B,GAAG,WACH+B,YAAY,mBACZC,SAAU,SAACP,GACPG,EAAKzB,SAAS,CAAC2C,SAAUrB,EAAEQ,OAAOlC,SAEtCA,MAAOvC,KAAK8B,MAAMwD,YAG1B5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwD,IAAI,SAAX,SACA3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACInC,KAAK,QACL4F,KAAK,QACL9B,GAAG,QACH+B,YAAY,gBACZC,SAAU,SAACP,GACPG,EAAKzB,SAAS,CAAC4C,MAAOtB,EAAEQ,OAAOlC,SAEnCA,MAAOvC,KAAK8B,MAAMyD,SAG1B7E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,QAASf,KAAKwF,cAAtB,iBAtGhBJ,EAAA,CAA4B9D,aAiHb8B,cAJS,SAAAtB,GAAK,MAAK,CAC9BlC,KAAMkC,EAAM8C,KAAKhF,OAGkB,CAAE8F,SLnEjB,SAAAE,GAAA,IAAElC,EAAFkC,EAAElC,MAAMC,EAARiC,EAAQjC,SAAU2B,EAAlBM,EAAkBN,SAAUC,EAA5BK,EAA4BL,MAA5B,OAAuC,SAAAjH,GAC3DU,IAAM8F,KAAK,YAAY,CACnBC,MAAOrB,EACPC,WACA2B,WACAC,UAEH9F,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GAEFrB,EAAS,CACLI,KD9DW,UC+DXC,QAASgB,EAAKC,OAGlBN,EAAgBK,EAAKd,QAAQP,KAEhCuB,MAAM,SAAAxB,GAAG,OAAED,EAAcC,EAAIC,OKkDiBqH,eLrGrB,SAAAE,GAAA,IAAGhH,EAAHgH,EAAGhH,QAAH,OAAiB,SAAAP,GAC3CA,EAAS,CACLI,KDf8B,yBCgB9BC,QAASE,OKkGFuE,CAAsDgC,GCvHtDU,EACA,EADAA,EAEC,EAFDA,EAGW,EAHXA,EAIa,EAJbA,EAKY,EALZA,EAMO,ECHP,SAASC,EAAgB7F,GACtC,OACEQ,EAAAC,EAAAC,cAAA,OAAKG,QAASb,EAAM8F,aAApB,eAEEtF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,MAAM,UAAUM,MAAO,CAAE6E,WAAY,SACxC/F,EAAMgG,cCJhBlH,IAAMC,SAASC,QAAQC,OAAvB,cAAiDC,aAAaC,QAAQ,aAEtE,IAKa8G,EAAa,kBAAM,SAAA7H,GAC5BU,IAAMQ,IAAI,cACTC,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GACFrB,EAAS,CACLI,KTde,cSefC,QAASgB,EAAKyG,UAGrBvG,MAAM,SAACxB,GACJD,EAAcC,EAAIC,OCF1BU,IAAMC,SAASC,QAAQC,OAAvB,cAAiDC,aAAaC,QAC5D,aAGK,IAODC,EAAkB,SAACT,EAASP,GAAV,OACtBA,EAAS,CACPI,KV1BoC,2BU2BpCC,QAASE,oBC2EEwH,cA/Fb,SAAAA,EAAYnG,GAAO,IAAAH,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAqG,IACjBtG,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAA4E,GAAAxE,KAAA7B,KAAME,KACD4B,MAAQ,CACXwE,OAAO,EACPC,OAAQ,IAKVxG,EAAKyG,OAASzG,EAAKyG,OAAOtE,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KATGA,mFAYjB,GAAIC,KAAKE,MAAMqG,QAAUvG,KAAKE,MAAMqG,OAAOE,OAAQ,CACjD,IAAMF,EAAS,GACfvG,KAAKE,MAAMqG,OAAOG,QAAQ,SAAAC,GACxBJ,EAAOI,EAAMrC,MAAQqC,IAEvB3G,KAAK2C,SAAS,CACZ4D,6CAMJvG,KAAK2C,SAAS,CACZ2D,OAAQtG,KAAK8B,MAAMwE,yCAId,IAAAtD,EAAAhD,KACD4G,EAAY,GAClB,GAAInF,OAAOoF,KAAK7G,KAAK8B,MAAMyE,QAAQE,OAAQ,KAAAK,EAAA,SAChCC,GACP,IAAMJ,EAAQ3D,EAAKlB,MAAMyE,OAAOQ,GAChCH,EAAU5C,KACRtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWyB,IAAKqE,EAAMrC,MACpB5D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAQ8F,EAAMK,OACdtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnC,KAAMiI,EAAMjI,KACZ8F,SAAU,SAAAP,GAERjB,EAAKL,SAAS,CACZ4D,OAAO9E,OAAAwF,EAAA,EAAAxF,CAAA,GACFuB,EAAKlB,MAAMyE,OADV9E,OAAAyF,EAAA,EAAAzF,CAAA,GAEHkF,EAAMrC,KAFH7C,OAAAwF,EAAA,EAAAxF,CAAA,GAGCuB,EAAKlB,MAAMyE,OAAOI,EAAMrC,MAHzB,CAIF/B,MAAO0B,EAAEQ,OAAOlC,aAKxBA,MAAOS,EAAKlB,MAAMyE,OAAOI,EAAMrC,MAAM/B,WAnB7C,IAAK,IAAIwE,KAAU/G,KAAK8B,MAAMyE,OAAQO,EAA7BC,GAyBX,OACErG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAOd,KAAKE,MAAMiH,SAAUpG,QAASf,KAAKwG,QAC/CxG,KAAKE,MAAMkH,aAEd1G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwG,OAAQrH,KAAK8B,MAAMwE,MACnBE,OAAQxG,KAAKwG,OACbrF,UAAWnB,KAAKE,MAAMiB,WAEtBT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAa2F,OAAQxG,KAAKwG,QAASxG,KAAKE,MAAM8G,OAC9CtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAY+F,GACZlG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,WACPiC,EAAKwD,SACL,IAAMD,EAAS,GACf,IAAK,IAAMjE,KAAOU,EAAKlB,MAAMyE,OACvBvD,EAAKlB,MAAMyE,OAAOjE,GAAKC,QACzBgE,EAAOjE,GAAOU,EAAKlB,MAAMyE,OAAOjE,GAAKC,OAGzCS,EAAK9C,MAAMK,QAAQgG,KAVvB,MAcU,IACV7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAASf,KAAKwG,QAArC,oBAtFiBc,IAAMhG,WCQ7BiG,cACJ,SAAAA,EAAYrH,GAAO,IAAAH,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAuH,IACjBxH,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAA8F,GAAA1F,KAAA7B,KAAME,KACDsG,OAASzG,EAAKyG,OAAOtE,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KACdA,EAAK+B,MAAQ,CACXuF,QAAQ,EACRG,YAAa,GAEfzH,EAAK0H,QAAU1H,EAAK0H,QAAQvF,KAAbT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KAPEA,yFASO6C,GACxB,GAAIA,EAAU8E,aAAc,CAC1B,IAAIC,EAAa,EACjB/E,EAAU8E,aAAahB,QAAQ,SAAAkB,GAC7BD,GAAcC,EAAKC,QAErB7H,KAAK2C,SAAS,CACZ6E,YAAaG,sCAKjB3H,KAAK2C,SAAS,CACZ0E,QAASrH,KAAK8B,MAAMuF,4CAGoD,IAAlE/C,EAAkEhB,EAAlEgB,KAAMwD,EAA4DxE,EAA5DwE,OAAQC,EAAoDzE,EAApDyE,YAAaC,EAAuC1E,EAAvC0E,SAAUC,EAA6B3E,EAA7B2E,YAAaC,EAAgB5E,EAAhB4E,MAAOL,EAASvE,EAATuE,MACjE7H,KAAKE,MAAMuH,QAAQ,CACjBnD,OACAwD,SACAC,cACAC,WACAC,cACAC,QACAL,2CAIK,IAAA7E,EAAAhD,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qBACbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,QAAQqH,OAAK,EAACC,OAAO,MACjC1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAawH,KAAK,aAAlB,WACA3H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeE,QAASf,KAAKwG,SAC7B9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUwG,OAAQrH,KAAK8B,MAAMuF,OAAQiB,QAAM,GACzC5H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKM,UAAU,UAAUmH,QAAM,GAC5BtI,KAAKE,MAAMN,MAAQI,KAAKE,MAAMN,KAAK2I,OAASzC,EAC3CpF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACmF,EAAD,CACEG,YAAalG,KAAK8B,MAAM0F,YACxBxB,YAAahG,KAAKE,MAAMsI,qBAK9B,GAEF9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASE,QAASf,KAAKE,MAAMuI,kBAA7B,kBAIF/H,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASE,QAASf,KAAKE,MAAMwI,YAA7B,WAED1I,KAAKE,MAAMN,MAAQI,KAAKE,MAAMN,KAAK2I,OAASzC,EAC3CpF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAsB8H,KAAG,EAACC,UAAQ,GAChClI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgB8H,KAAG,EAACE,OAAK,GAAzB,iBAGAnI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAciI,OAAK,GACjBpI,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACmI,EAAD,CACE3B,YAAY,eACZJ,MAAM,eACNzG,QAAS,SAAAgG,GAAU,IAEfjC,EAOEiC,EAPFjC,KACAwD,EAMEvB,EANFuB,OACAC,EAKExB,EALFwB,YACAC,EAIEzB,EAJFyB,SACAC,EAGE1B,EAHF0B,YACAC,EAEE3B,EAFF2B,MACAL,EACEtB,EADFsB,MAEF7E,EAAKyE,QAAQ,CACXnD,OACAwD,SACAC,cACAC,WACAC,cACAC,QACAL,WAGJV,SAAS,UACTZ,OAAQ,CACN,CACES,MAAO,OACP1C,KAAM,OACN5F,KAAM,OACN6D,MAAO,IAET,CACEyE,MAAO,SACP1C,KAAM,SACN5F,KAAM,OACN6D,MAAO,IAET,CACEyE,MAAO,QACP1C,KAAM,cACN5F,KAAM,SACN6D,MAAO,GAET,CACEyE,MAAO,WACP1C,KAAM,WACN5F,KAAM,SACN6D,MAAO,GAET,CACEyE,MAAO,cACP1C,KAAM,cACN5F,KAAM,OACN6D,MAAO,IAET,CACEyE,MAAO,QACP1C,KAAM,QACN5F,KAAM,SACN6D,MAAO,GAET,CACEyE,MAAO,QACP1C,KAAM,QACN5F,KAAM,SACN6D,MAAO,OAKf7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcmI,SAAO,IACrBtI,EAAAC,EAAAC,cAACC,EAAA,EAAD,0BAIJ,cApJKyG,IAAMhG,WAiKZ8B,cAJS,SAAAtB,GAAK,MAAK,CAChClC,KAAMkC,EAAM8C,KAAKhF,KACjB8H,aAAc5F,EAAMmH,aAAavB,eAIjC,CAAED,QF/GmB,SAAA5C,GAAA,IACrBP,EADqBO,EACrBP,KACAwD,EAFqBjD,EAErBiD,OACAC,EAHqBlD,EAGrBkD,YACAC,EAJqBnD,EAIrBmD,SACAC,EALqBpD,EAKrBoD,YACAC,EANqBrD,EAMrBqD,MACAL,EAPqBhD,EAOrBgD,MAPqB,OAQjB,SAAAvJ,GACJU,IACG8F,KADH,YACqB,CACjBR,OACAwD,SACAC,cACAC,WACAC,cACAC,QACAL,UAEDpI,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GACJrB,EAAS,CACPI,KVnFgB,WUoFhBC,QAASgB,EAAKiI,OAEhBzB,IAAa7H,GACbgB,EAAgBK,EAAKd,QAASP,KAE/BuB,MAAM,SAAAxB,GAAG,OAAID,EAAcC,EAAKC,QEiFtB8E,CAGbmE,GCjKa2B,mLAjBX,OACExI,EAAAC,EAAAC,cAACF,EAAAC,EAAMwI,SAAP,KACEzI,EAAAC,EAAAC,cAACwI,EAAD,CACEX,iBAAkBzI,KAAKE,MAAMuI,iBAC7BC,WAAY1I,KAAKE,MAAMwI,WACvBF,iBAAkBxI,KAAKE,MAAMsI,mBAE/B9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWM,UAAU,gCACnBT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKM,UAAU,6CACbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK2C,GAAI,IAAKxD,KAAKE,MAAMqD,oBAXVjC,8BCkIZ+H,EAzHO,SAAAnJ,GACpB,OACEQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMM,UAAU,kBACdT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyI,IAAKC,IAAKC,IAAI,mBACvB9I,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAYX,EAAMoE,MAClB5D,EAAAC,EAAAC,cAACC,EAAA,EAAD,gBAAuBX,EAAM4H,QAC7BpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,eAAsBX,EAAMgI,OAC5BxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,kBAAyBX,EAAM8H,UAC/BtH,EAAAC,EAAAC,cAACC,EAAA,EAAD,sBAA6BX,EAAM2H,OACnCnH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAWX,EAAM+H,aACjBvH,EAAAC,EAAAC,cAAA,OAAKO,UAAU,oBACZjB,EAAMqI,OAASzC,EACdpF,EAAAC,EAAAC,cAACmI,EAAD,CACE3B,YAAY,MACZJ,MAAM,mCACNzG,QAAS,SAAAgG,GAAU,IACXsB,EAAUtB,EAAVsB,OACNA,EAAQ4B,SAAS5B,KACJ3H,EAAM2H,MACjB3H,EAAMuH,QAAQ,CAAEI,QAAO6B,OAAQxJ,EAAMyJ,MAErCzJ,EAAM0J,YAAN,iCAAA9G,OACmC5C,EAAM2H,MAAQ,KAIrDV,SAAS,UACTZ,OAAQ,CACN,CAAES,MAAO,QAAS1C,KAAM,QAAS5F,KAAM,SAAU6D,MAAO,MAI5D7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwI,SAAA,KACEzI,EAAAC,EAAAC,cAACmI,EAAD,CACE3B,YAAY,cACZJ,MAAM,2BACNzG,QAAS,WACPL,EAAM2J,iBAAiB3J,EAAMyJ,MAE/BxC,SAAS,WAEXzG,EAAAC,EAAAC,cAACmI,EAAD,CACE3B,YAAY,SACZJ,MAAM,cACNzG,QAAS,SAAAgG,GAAU,IAEfjC,EAOEiC,EAPFjC,KACAwD,EAMEvB,EANFuB,OACAgC,EAKEvD,EALFuD,iBACAC,EAIExD,EAJFwD,cACA9B,EAGE1B,EAHF0B,YACA+B,EAEEzD,EAFFyD,WACAnC,EACEtB,EADFsB,MAEI6B,EAASxJ,EAAMyJ,IACrBzJ,EAAM+J,iBAAiB,CACrBP,SACApF,OACAwD,SACAgC,mBACAC,gBACA9B,cACA+B,aACAnC,WAGJV,SAAS,UACTZ,OAAQ,CACN,CACES,MAAO,OACP1C,KAAM,OACN5F,KAAM,OACN6D,MAAOrC,EAAMoE,MAEf,CACE0C,MAAO,SACP1C,KAAM,SACN5F,KAAM,OACN6D,MAAOrC,EAAM4H,QAEf,CACEd,MAAO,QACP1C,KAAM,mBACN5F,KAAM,SACN6D,MAAOrC,EAAM6H,aAEf,CACEf,MAAO,WACP1C,KAAM,gBACN5F,KAAM,SACN6D,MAAOrC,EAAM8H,UAEf,CACEhB,MAAO,cACP1C,KAAM,cACN5F,KAAM,OACN6D,MAAOrC,EAAM+H,aAEf,CACEjB,MAAO,QACP1C,KAAM,aACN5F,KAAM,SACN6D,MAAOrC,EAAMgI,OAEf,CACElB,MAAO,QACP1C,KAAM,QACN5F,KAAM,SACN6D,MAAOrC,EAAM2H,eC9G3BqC,cACJ,SAAAA,EAAYhK,GAAO,IAAAH,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAkK,IACjBnK,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAyI,GAAArI,KAAA7B,KAAME,KACD4B,MAAQ,CACXsE,MAAO,IAETrG,EAAK8J,iBAAmB9J,EAAK8J,iBAAiB3H,KAAtBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KACxBA,EAAKkK,iBAAmBlK,EAAKkK,iBAAiB/H,KAAtBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KANPA,mFASjBC,KAAKE,MAAMiG,+DAEavD,GACpBA,EAAUwD,OACZpG,KAAK2C,SAAS,CAAEyD,MAAOxD,EAAUwD,iDAGpB5D,GACXA,EACFxC,KAAKE,MAAMiK,WAAW,CAAET,OAAQlH,IAEhCjE,QAAQC,IAAI,eAAgBgE,GAE9B,IAAM4H,EAAWpK,KAAK8B,MAAMsE,MAAM3D,OAAO,SAAAmF,GACvC,OAAOA,EAAK+B,MAAQnH,IAEtBxC,KAAK2C,SAAS,CACZyD,MAAOgE,gDAYR,IARDV,EAQCpG,EARDoG,OACApF,EAOChB,EAPDgB,KACAwD,EAMCxE,EANDwE,OACAgC,EAKCxG,EALDwG,iBACAC,EAICzG,EAJDyG,cACA9B,EAGC3E,EAHD2E,YACA+B,EAEC1G,EAFD0G,WACAnC,EACCvE,EADDuE,MAEME,EAAc+B,EACd9B,EAAW+B,EACX7B,EAAQ8B,EACVN,EACF1J,KAAKE,MAAMmK,WAAW,CACpBX,SACApF,OACAwD,SACAC,cACAC,WACAC,cACAC,QACAL,UAGFtJ,QAAQC,IAAI,eAAgBkL,GAE9B,IAAMU,EAAWpK,KAAK8B,MAAMsE,MAAM3D,OAAO,SAAAmF,GACvC,OAAOA,EAAK+B,MAAQD,IAEtBU,EAASE,QAAQ,CACfZ,SACApF,OACAwD,SACAC,cACAC,WACAC,cACAC,QACAL,UAEF7H,KAAK2C,SAAS,CACZyD,MAAOgE,uCAGgB,IAAjBvC,EAAiBhC,EAAjBgC,MAAO6B,EAAU7D,EAAV6D,OACf,GAAIA,EAAQ,CACV,IAAM9B,EAAO,CAAEC,QAAO6B,UAEtB1J,KAAKE,MAAMqK,iBAAiB,CAAE3C,OAAM/I,QADpB,mDAGhBN,QAAQC,IAAI,cAAekL,uCAGnB7K,GACVmB,KAAKE,MAAMsK,eAAe3L,oCAEnB,IAAAmE,EAAAhD,KACDoG,EAAQpG,KAAK8B,MAAMsE,MAAMlD,IAAI,SAAC0E,EAAM6C,GAAP,OACjC/J,EAAAC,EAAAC,cAAA,MAAI0B,IAAKmI,GACP/J,EAAAC,EAAAC,cAAC8J,EAADjJ,OAAAkJ,OAAA,GACM/C,EADN,CAEEW,KAAMvF,EAAK9C,MAAMN,KAAK2I,KACtBqB,YAAa,SAAA/K,GACXmE,EAAK4G,YAAY/K,IAEnB4I,QAAS,SAAA5C,GAAuB,IAApBgD,EAAoBhD,EAApBgD,MAAO6B,EAAa7E,EAAb6E,OACjB1G,EAAKyE,QAAQ,CAAEI,QAAO6B,YAExBG,iBAAkB,SAAArH,GAChBQ,EAAK6G,iBAAiBrH,IAExByH,iBAAkB,SAAArE,GASZ,IARJ8D,EAQI9D,EARJ8D,OACApF,EAOIsB,EAPJtB,KACAwD,EAMIlC,EANJkC,OACAgC,EAKIlE,EALJkE,iBACAC,EAIInE,EAJJmE,cACA9B,EAGIrC,EAHJqC,YACA+B,EAEIpE,EAFJoE,WACAnC,EACIjC,EADJiC,MAEA7E,EAAKiH,iBAAiB,CACpBP,SACApF,OACAwD,SACAgC,mBACAC,gBACA9B,cACA+B,aACAnC,iBAMJ+C,EAAWxE,EAAMK,OAASL,EAAQ,aACxC,OACE1F,EAAAC,EAAAC,cAAA,OAAKO,UAAU,yBACbT,EAAAC,EAAAC,cAAA,UAAKgK,WAhIctJ,aAyIZ8B,cAJS,SAAAtB,GAAK,MAAK,CAChCsE,MAAOtE,EAAMlD,KAAKwH,MAClBxG,KAAMkC,EAAM8C,KAAKhF,OAIjB,CACEuG,aACA5G,UACA4K,WLnDsB,SAAAvE,GAAA,IAAG8D,EAAH9D,EAAG8D,OAAH,OAAgB,SAAApL,GACxCU,IACG6L,OADH,gBAAA/H,OAC0B4G,IACvBjK,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GACJrB,EAAS,CACPI,KVhGmB,cUiGnBC,QAASgB,EAAKiI,OAGhBtI,EAAgBK,EAAKd,QAASP,KAE/BuB,MAAM,SAAAxB,GAAG,OAAID,EAAcC,EAAKC,OKwCjC+L,WLrCsB,SAAAS,GAAA,IACxBpB,EADwBoB,EACxBpB,OACApF,EAFwBwG,EAExBxG,KACAwD,EAHwBgD,EAGxBhD,OACAC,EAJwB+C,EAIxB/C,YACAC,EALwB8C,EAKxB9C,SACAC,EANwB6C,EAMxB7C,YACAC,EAPwB4C,EAOxB5C,MACAL,EARwBiD,EAQxBjD,MARwB,OASpB,SAAAvJ,GACJU,IACG+L,IADH,gBAAAjI,OACuB4G,GAAU,CAC7BpF,OACAwD,SACAC,cACAC,WACAC,cACAC,QACAL,UAEDpI,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GACJrB,EAAS,CACPI,KVjImB,cUkInBC,QAASgB,EAAKiI,OAGhBtI,EAAgBK,EAAKd,QAASP,KAE/BuB,MAAM,SAAAxB,GAAG,OAAID,EAAcC,EAAKC,OKSjCkM,eLrI0B,SAAA3L,GAAO,OAAI,SAAAP,GACvCA,EAAS,CACPI,KVH4B,mBUI5BC,QAASE,MKmIT0L,iBLwD4B,SAAAS,GAAA,IAAGpD,EAAHoD,EAAGpD,KAAM/I,EAATmM,EAASnM,QAAT,OAAuB,SAAAP,GACrDA,EAAS,CACPI,KVlM+B,sBUmM/BC,QAASiJ,IAEXtJ,EAAS,CACPI,KVpM4B,mBUqM5BC,QAASE,OKvEEuE,CAUb8G,GC1Bae,EAhIf,SAAAzJ,GAAA,SAAAyJ,IAAA,OAAAxJ,OAAAC,EAAA,EAAAD,CAAAzB,KAAAiL,GAAAxJ,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAwJ,GAAAC,MAAAlL,KAAAmL,YAAA,OAAA1J,OAAAW,EAAA,EAAAX,CAAAwJ,EAAAzJ,GAAAC,OAAAY,EAAA,EAAAZ,CAAAwJ,EAAA,EAAA3I,IAAA,SAAAC,MAAA,WACW,IAWHxD,EAXGgB,EAAAC,KACD0H,EAAe1H,KAAKE,MAAMwH,aAAaxE,IAAI,SAAA0E,GAAI,OACnDlH,EAAAC,EAAAC,cAAA,MAAI0B,IAAKsF,EAAKwD,YAAYzB,IAAKxI,UAAU,iBACvCT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qBACbT,EAAAC,EAAAC,cAAA,qBAAagH,EAAKwD,YAAY9G,MAC9B5D,EAAAC,EAAAC,cAAA,uBAAegH,EAAKwD,YAAYC,QAChC3K,EAAAC,EAAAC,cAAA,sBAAcgH,EAAKC,OACnBnH,EAAAC,EAAAC,cAAA,sBAAcgH,EAAKwD,YAAYlD,WAKrC,OAAQlI,KAAKE,MAAMnB,QACjB,KAAK+G,EACH/G,EACE2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyK,UAAQ,EAACxK,MAAM,WAAtB,eAIF,MACF,KAAKgF,EACH/G,EACE2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyK,UAAQ,EAACxK,MAAM,WAAtB,aAIF,MACF,KAAKgF,EACH/G,EACE2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyK,UAAQ,EAACxK,MAAM,WAAtB,qBAIF,MACF,KAAKgF,EACH/G,EACE2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyK,UAAQ,EAACxK,MAAM,UAAtB,oBAIF,MACF,QACE/B,EAAS,kBAEb,OACE2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMM,UAAU,kBACdT,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,sBAA0Bb,KAAKE,MAAMqL,aACrC7K,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,qBADF,IACmBZ,KAAKE,MAAMsL,SAE9B9K,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,oBADF,IACkB7B,GAElB2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,yBADF,IACuBZ,KAAKE,MAAM+H,aAEjCjI,KAAKE,MAAMuL,kBACV/K,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,gCADF,IAC8BZ,KAAKE,MAAMuL,mBAGzC/K,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwI,SAAA,MAEDzB,EAAajB,OACZ/F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BADF,IACyB8G,GAGzBhH,EAAAC,EAAAC,cAAA,2BACiBF,EAAAC,EAAAC,cAAA,YAGnBF,EAAAC,EAAAC,cAAA,OAAKO,UAAU,oBACZnB,KAAKE,MAAMqI,OAASzC,EACnBpF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwI,SAAA,KACEzI,EAAAC,EAAAC,cAACmI,EAAD,CACE3B,YAAY,UACZJ,MAAM,iBACNzG,QAAS,SAAAgG,GAAU,IACTkF,EAAsBlF,EAAtBkF,kBACJA,EACF1L,EAAKG,MAAMwL,mBACT3L,EAAKG,MAAMyJ,KACX,EACA8B,GAGF1L,EAAKG,MAAMwL,mBAAmB3L,EAAKG,MAAMyJ,KAAK,IAGlDxC,SAAS,UACTZ,OAAQ,CACN,CACES,MAAO,cACP1C,KAAM,oBACN5F,KAAM,OACN6D,MAAO,OAIb7B,EAAAC,EAAAC,cAACmI,EAAD,CACE3B,YAAY,SACZJ,MAAM,gBACNzG,QAAS,WACPR,EAAKG,MAAMwL,mBAAmB3L,EAAKG,MAAMyJ,KAAK,MAGlDjJ,EAAAC,EAAAC,cAACmI,EAAD,CACE3B,YAAY,SACZJ,MAAM,gBACNzG,QAAS,WACPR,EAAKG,MAAMyL,gBAAgB5L,EAAKG,MAAMyJ,MAExCxC,SAAS,YAIbzG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwI,SAAA,aAvHd8B,EAAA,CAAoC3J,aCC9BsK,eACF,SAAAA,EAAY1L,GAAM,IAAAH,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAA4L,IACd7L,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAmK,GAAA/J,KAAA7B,KAAME,KACD4B,MAAQ,CACT+J,OAAO,GACPC,YAAY,MAEhB/L,EAAK4L,gBAAkB5L,EAAK4L,gBAAgBzJ,KAArBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KANTA,mFASdC,KAAKE,MAAM6L,gEAGWnJ,GACtBrE,QAAQC,IAAI,kBAAmBoE,GAC5BA,EAAUiJ,QACT7L,KAAK2C,SAAS,CAACkJ,OAAQjJ,EAAUiJ,SAElCjJ,EAAUkJ,cAAe9L,KAAK8B,MAAMgK,cACnC9L,KAAK2C,SAAS,CAACmJ,YAAalJ,EAAUkJ,cACtC9L,KAAKE,MAAM6L,uDAGHvJ,GACTA,EACCxC,KAAKE,MAAM8L,YAAY,CAACxJ,OAExBjE,QAAQC,IAAI,eAAgBgE,GAEhC,IAAMyJ,EAAYjM,KAAK8B,MAAM+J,OAAOpJ,OAAO,SAACyJ,GACxC,OAAOA,EAAMvC,MAAQnH,IAEzBxC,KAAK2C,SAAS,CACVkJ,OAAQI,+CAGGzJ,EAAG2J,EAAQV,GACvBjJ,EACCxC,KAAKE,MAAMkM,mBAAmB,CAAED,UAAS3J,KAAIiJ,sBAE7ClN,QAAQC,IAAI,eAAgBgE,oCAI3B,IAAAQ,EAAAhD,KACLzB,QAAQC,IAAIwB,KAAKE,OACjB,IAAIqI,EAAOvI,KAAKE,MAAMN,KAAKI,KAAKE,MAAMN,KAAK2I,KAAK,EAC1CsD,EAAS7L,KAAK8B,MAAM+J,OAAO3I,IAAI,SAACgJ,GAAD,OACjCxL,EAAAC,EAAAC,cAAA,MAAI0B,IAAK4J,EAAMvC,KAAKjJ,EAAAC,EAAAC,cAACyL,EAAD5K,OAAAkJ,OAAA,GACZuB,EADY,CAEhB3D,KAAMA,EACNoD,gBAAiB,SAACnJ,GAAMQ,EAAK2I,gBAAgBnJ,IAC7CkJ,mBAAoB,SAAClJ,EAAG2J,EAAQV,GAAqBzI,EAAK0I,mBAAmBlJ,EAAG2J,EAAQV,UAG1Fb,EAAWiB,EAAOpF,OAAOoF,EAAO,aACtC,OACEnL,EAAAC,EAAAC,cAAA,OAAKO,UAAU,yBACbT,EAAAC,EAAAC,cAAA,UACKgK,WA3DQtJ,aAsEzBgL,GAAelJ,YALS,SAAAtB,GAAK,MAAK,CAC9B+J,OAAQ/J,EAAMlD,KAAKiN,OACnBjM,KAAMkC,EAAM8C,KAAKhF,KACjBkM,YAAahK,EAAMyK,GAAGT,cAEa,CAAEC,YRnDd,kBAAM,SAAAzN,GAC7BU,IAAMQ,IAAI,eACTC,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GAEFrB,EAAS,CACLI,KT3BgB,eS4BhBC,QAASgB,EAAKkM,WAIrBhM,MAAM,SAAAxB,GAAG,OAAED,EAAcC,EAAIC,OQwCoB0N,YPgH3B,SAAAQ,GAAA,IAAGhK,EAAHgK,EAAGhK,GAAH,OAAY,SAAAlE,GACrCU,IACG6L,OADH,iBAAA/H,OAC2BN,GAAM,CAC7BtD,QAAS,CACPuN,eAAgB,sBAGnBhN,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GACJrB,EAAS,CACPI,KVtLoB,eUuLpBC,QAASgB,EAAKuM,QAEhB5M,EAAgBK,EAAKd,QAASP,KAE/BuB,MAAM,SAAAxB,GAAG,OAAID,EAAcC,EAAKC,OO/H8B8N,mBP6FjC,SAAAM,GAAA,IAChCP,EADgCO,EAChCP,QACA3J,EAFgCkK,EAEhClK,GACAiJ,EAHgCiB,EAGhCjB,kBAHgC,OAI5B,SAAAnN,GACJU,IACG8F,KADH,wBACiC,CAAEqH,UAAS3J,KAAIiJ,sBAC7ChM,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GACJrB,EAAS,CACPI,KVpK4B,uBUqK5BC,QAASgB,EAAKuM,MAAMnN,SAGtBO,EAAgBK,EAAKd,QAASP,KAE/BuB,MAAM,SAAAxB,GAAG,OAAID,EAAcC,EAAKC,QO7GrC,CAAyFsN,IC7DnFe,eACJ,SAAAA,EAAYzM,GAAO,IAAAH,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAA2M,IACjB5M,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAkL,GAAA9K,KAAA7B,KAAME,KACD4B,MAAQ,CACXyJ,YAAaqB,KAAKC,MAAsB,IAAhBD,KAAKE,UAC7B7E,YAAa,GACbP,aAAc,GACdtB,MAAO,IAETrG,EAAKgN,WAAahN,EAAKgN,WAAW7K,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KARDA,4EAajBC,KAAKE,MAAM8M,kBAAkB,CAAEtF,aAFV,GAEwB7I,QAD7B,mBAEhBmB,KAAK2C,SAAS,CACZsF,YAAa,GACbP,aAAc,uDAGQ9E,GACxB,GAA4B,UAAxBA,EAAUqK,UAAd,CAGA,GAAIrK,EAAU8E,aAAc,CAG1B,IAAMA,EAAe,GACrB1H,KAAK8B,MAAMsE,MAAMM,QAAQ,SAAAkB,GACvB,IAAK,IAAI6C,EAAI,EAAGA,EAAI7H,EAAU8E,aAAajB,OAAQgE,IAC7C7H,EAAU8E,aAAa+C,GAAGf,SAAW9B,EAAK+B,KAC5CjC,EAAa1D,KAAK,CAChB0F,OAAQ9B,EAAK+B,IACbrF,KAAMsD,EAAKtD,KACXwD,OAAQF,EAAKE,OACbI,MAAON,EAAKM,MACZL,MAAOjF,EAAU8E,aAAa+C,GAAG5C,UAKzC7H,KAAK2C,SAAS,CACZ+E,iBAGA9E,EAAUwD,OACZpG,KAAK2C,SAAS,CACZyD,MAAOxD,EAAUwD,0CAId,IAAApD,EAAAhD,KACD0H,EAAe1H,KAAK8B,MAAM4F,aAAaxE,IAAI,SAAC0E,EAAM6C,GAAP,OAC/C/J,EAAAC,EAAAC,cAAA,MAAI0B,IAAKmI,EAAGtJ,UAAU,iBACpBT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qBACbT,EAAAC,EAAAC,cAAA,qBAAagH,EAAKtD,MAClB5D,EAAAC,EAAAC,cAAA,uBAAegH,EAAKE,QACpBpH,EAAAC,EAAAC,cAAA,sBAAcgH,EAAKC,OACnBnH,EAAAC,EAAAC,cAAA,sBAAcgH,EAAKM,WAIrBsD,EAAU,EAId,OAHAxL,KAAK8B,MAAM4F,aAAahB,QAAQ,SAAAkB,GAC9B4D,GAAW5D,EAAKM,MAAQN,EAAKC,QAG7BnH,EAAAC,EAAAC,cAAA,OACEO,UAAU,wBACVC,MAAO,CAAE8L,WAAY,OAAQC,QAASnN,KAAKE,MAAM+M,YAEjDvM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMM,UAAU,kBACdT,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,sBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnC,KAAK,SACL8F,SAAU,SAAAP,GACRjB,EAAKL,SAAS,CAAE4I,YAAatH,EAAEQ,OAAOlC,SAExCA,MAAOvC,KAAK8B,MAAMyJ,gBAIxB7K,EAAAC,EAAAC,cAAA,uBAAe4K,EAAf,KACA9K,EAAAC,EAAAC,cAAA,qBACU,IACRF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOyK,UAAQ,EAACxK,MAAM,WAAtB,gBAIFJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,qBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnC,KAAK,WACL8F,SAAU,SAAAP,GACRjB,EAAKL,SAAS,CAAEsF,YAAahE,EAAEQ,OAAOlC,SAExCA,MAAOvC,KAAK8B,MAAMmG,gBAIvBP,EAAajB,OACZ/F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BADF,IACyB8G,GAGzBhH,EAAAC,EAAAC,cAAA,2BACiBF,EAAAC,EAAAC,cAAA,YAGnBF,EAAAC,EAAAC,cAAA,OAAKO,UAAU,oBACbT,EAAAC,EAAAC,cAACmI,EAAD,CACE5B,SAAS,UACTC,YAAY,gBACZJ,MAAM,iBACNzG,QAAS,WAAM,IAAA6M,EACsCpK,EAAKlB,MAAhDyJ,EADK6B,EACL7B,YAAatD,EADRmF,EACQnF,YAAaP,EADrB0F,EACqB1F,aAClC1E,EAAK9C,MAAMmN,YAAY,CACrB9B,cACAtD,cACAP,oBAINhH,EAAAC,EAAAC,cAACmI,EAAD,CACE5B,SAAS,SACTC,YAAY,QACZJ,MAAM,eACNzG,QAAS,WACPyC,EAAK+J,2BApIIzL,aAkJZ8B,eAJS,SAAAtB,GAAK,MAAK,CAChC4F,aAAc5F,EAAMmH,aAAavB,aACjCtB,MAAOtE,EAAMlD,KAAKwH,QAIlB,CAAEiH,YRbuB,SAAAC,GAAA,IACzB/B,EADyB+B,EACzB/B,YACAtD,EAFyBqF,EAEzBrF,YACAP,EAHyB4F,EAGzB5F,aAHyB,OAIrB,SAAApJ,GACJU,IACG8F,KADH,gBACyB,CAAEyG,cAAatD,cAAaP,iBAClDjI,KAAK,SAAAC,GAAG,OAAIA,EAAId,OAChBa,KAAK,SAAAE,GACJrB,EAAS,CACPI,KVlJoB,eUmJpBC,QAASgB,EAAKuM,QAGhB5M,EAAgBK,EAAKd,QAASP,KAE/BuB,MAAM,SAAAxB,GAAG,OAAID,EAAcC,EAAKC,OQHpB0O,kBR2CgB,SAAAO,GAAA,IAAG7F,EAAH6F,EAAG7F,aAAH6F,EAAiB1O,QAAjB,OAA+B,SAAAP,GAC9DA,EAAS,CACPI,KV9LgC,uBU+LhCC,QAAS+I,OQhDEtE,CAGbuJ,IC3JWa,GAAb,SAAAhM,GACE,SAAAgM,EAAYtN,GAAO,IAAAH,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAwN,IACjBzN,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAA+L,GAAA3L,KAAA7B,KAAME,KACD4B,MAAQ,CACX2L,gBAAiB,gBAEnB1N,EAAK6D,aAAe7D,EAAK6D,aAAa1B,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KACpBA,EAAK0I,iBAAmB1I,EAAK0I,iBAAiBvG,KAAtBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KACxBA,EAAK2I,WAAa3I,EAAK2I,WAAWxG,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KAClBA,EAAKyI,iBAAmBzI,EAAKyI,iBAAiBtG,KAAtBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAA1B,KARPA,EADrB,OAAA0B,OAAAW,EAAA,EAAAX,CAAA+L,EAAAhM,GAAAC,OAAAY,EAAA,EAAAZ,CAAA+L,EAAA,EAAAlL,IAAA,4BAAAC,MAAA,SAY4BK,GACpBA,EAAU8K,iBACZnP,QAAQC,IAAI,iCACZwB,KAAKE,MAAM6D,QAAQC,KAAK,eAf9B,CAAA1B,IAAA,eAAAC,MAAA,SAmBe0B,GACXA,EAAEC,iBACFlE,KAAKE,MAAMiE,YAAY,CACrBT,MAAO1D,KAAK8B,MAAM4B,MAClBC,SAAU3D,KAAK8B,MAAM6B,aAvB3B,CAAArB,IAAA,mBAAAC,MAAA,WA2BIvC,KAAK2C,SAAS,CACZ8K,gBAAiB,mBA5BvB,CAAAnL,IAAA,aAAAC,MAAA,WAgCIvC,KAAK2C,SAAS,CACZ8K,gBAAiB,iBAjCvB,CAAAnL,IAAA,mBAAAC,MAAA,WAqCIvC,KAAK2C,SAAS,CACZ8K,gBAAiB,mBAtCvB,CAAAnL,IAAA,SAAAC,MAAA,WA2CI,IAAIkL,EACJ,OAAQzN,KAAK8B,MAAM2L,iBACjB,IAAK,eACHA,EAAkB/M,EAAAC,EAAAC,cAAC+M,EAAD,MAClB,MACF,IAAK,aACHF,EAAkB/M,EAAAC,EAAAC,cAAC0L,GAAD,MAClB,MACF,QACEmB,EAAkB/M,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwI,SAAA,MAEtB,IAAMyE,EAC2B,iBAA/B5N,KAAK8B,MAAM2L,gBAAqC,QAAU,OAC5D,OACE/M,EAAAC,EAAAC,cAACiN,EAAD,CACEpF,iBAAkBzI,KAAKyI,iBACvBC,WAAY1I,KAAK0I,WACjBF,iBAAkBxI,KAAKwI,kBAEvB9H,EAAAC,EAAAC,cAACkN,GAAD,CAAcb,UAAWW,IACxBH,OA/DTD,EAAA,CAA0BlM,aAyEX8B,eAJS,SAAAtB,GAAK,MAAK,CAChC4L,eAAgB5L,EAAMjD,QAAQ6O,iBAK9B,CAAEnO,WAFW6D,CAGboK,sBCnFIO,GAAe,CACjB3H,MAAO,KACPyF,OAAQ,KACRmC,MAAO,MCHLD,GAAe,CACjBjK,MAAO,KACPlE,KAAMqF,KAAKgJ,MAAM7O,aAAaC,QAAQ,UCOpC0O,GAAe,CACjBnO,KAAM,KACNgI,KAAM,KACNsE,MAAO,KACPJ,YAAa,MCPXiC,GAAe,CACnBlP,QAAS,CACPwB,aAAc,KACd0C,KAAM,MAER2K,gBAAgB,GCXZK,GAAe,CACnBrG,aAAc,ICIDwG,gBAAgB,CAC7BtJ,KJDa,WAAuC,IAA9B9C,EAA8BqJ,UAAA1E,OAAA,QAAA0H,IAAAhD,UAAA,GAAAA,UAAA,GAAtB4C,GAAcK,EAAQjD,UAAA1E,OAAA,EAAA0E,UAAA,QAAAgD,EAClD,OAAQC,EAAO1P,MACX,IrBTe,UqBUX,OAAO+C,OAAAwF,EAAA,EAAAxF,CAAA,GACAK,EADP,CAEIgC,MAAOsK,EAAOzP,UAEtB,IrBbe,UqBkBf,IrBZgB,WqBaZ,OAAO8C,OAAAwF,EAAA,EAAAxF,CAAA,GACAK,EADP,CAEIlC,KAAMwO,EAAOzP,UAErB,QACI,OAAOmD,IIhBjBlD,KLDa,WAAuC,IAA9BkD,EAA8BqJ,UAAA1E,OAAA,QAAA0H,IAAAhD,UAAA,GAAAA,UAAA,GAAtB4C,GAAcK,EAAQjD,UAAA1E,OAAA,EAAA0E,UAAA,QAAAgD,EAClD,OAAQC,EAAO1P,MACX,IpBRmB,coBSf,OAAO+C,OAAAwF,EAAA,EAAAxF,CAAA,GACAK,EADP,CAEIsE,MAAOgI,EAAOzP,UAEtB,IpBXoB,eoBYhB,OAAO8C,OAAAwF,EAAA,EAAAxF,CAAA,GACAK,EADP,CAEI+J,OAAQuC,EAAOzP,UAEvB,IpBZiB,YoBab,OAAO8C,OAAAwF,EAAA,EAAAxF,CAAA,GACAK,EADP,CAEIkM,MAAOI,EAAOzP,UAEtB,QACI,OAAOmD,IKhBjByK,GHQa,WAAuC,IAA9BzK,EAA8BqJ,UAAA1E,OAAA,QAAA0H,IAAAhD,UAAA,GAAAA,UAAA,GAAtB4C,GAAcK,EAAQjD,UAAA1E,OAAA,EAAA0E,UAAA,QAAAgD,EAClD,OAAQC,EAAO1P,MACX,ItBXoB,esBgBpB,ItBfoB,esBgBhB,OAAO+C,OAAAwF,EAAA,EAAAxF,CAAA,GACAK,EADP,CAEIlC,KAAMwO,EAAOzP,UAErB,ItBnBgB,WsBwBhB,ItBtBmB,csB2BnB,ItB5BmB,csB6Bf,OAAO8C,OAAAwF,EAAA,EAAAxF,CAAA,GACAK,EADP,CAEI8F,KAAMwG,EAAOzP,UAErB,ItB/BoB,esBoCpB,ItBlCoB,esBmChB,OAAO8C,OAAAwF,EAAA,EAAAxF,CAAA,GACAK,EADP,CAEIoK,MAAOkC,EAAOzP,UAEtB,ItBxC4B,uBsByCxB,OAAO8C,OAAAwF,EAAA,EAAAxF,CAAA,GACAK,EADP,CAEIgK,YAAasC,EAAOzP,UAE5B,QACI,OAAOmD,IGlDjBjD,QFYa,WAAuC,IAA9BiD,EAA8BqJ,UAAA1E,OAAA,QAAA0H,IAAAhD,UAAA,GAAAA,UAAA,GAAtB4C,GAAcK,EAAQjD,UAAA1E,OAAA,EAAA0E,UAAA,QAAAgD,EACpD,OAAQC,EAAO1P,MACb,IvBpBkC,yBuBqBhC,OAAO+C,OAAAwF,EAAA,EAAAxF,CAAA,GACFK,EADL,CAEEjD,QAAQ4C,OAAAwF,EAAA,EAAAxF,CAAA,GAAMK,EAAMjD,QAAb,CAAsBkE,KAAMqL,EAAOzP,QAASD,KAAM,YAE7D,IvBxBoC,2BuByBlC,OAAO+C,OAAAwF,EAAA,EAAAxF,CAAA,GACFK,EADL,CAEEjD,QAAQ4C,OAAAwF,EAAA,EAAAxF,CAAA,GAAMK,EAAMjD,QAAb,CAAsBkE,KAAMqL,EAAOzP,QAASD,KAAM,cAE7D,IvBb4B,mBuBc1B,OAAO+C,OAAAwF,EAAA,EAAAxF,CAAA,GACFK,EADL,CAEEjD,QAAQ4C,OAAAwF,EAAA,EAAAxF,CAAA,GAAMK,EAAMjD,QAAb,CAAsBkE,KAAMqL,EAAOzP,QAASD,KAAM,YAE7D,IvBjB4B,mBuBkB1B,OAAO+C,OAAAwF,EAAA,EAAAxF,CAAA,GACFK,EADL,CAEEjD,QAAQ4C,OAAAwF,EAAA,EAAAxF,CAAA,GAAMK,EAAMjD,QAAb,CAAsBkE,KAAMqL,EAAOzP,QAASD,KAAM,cAE7D,IvB5B8B,qBuB6B5B,OAAO+C,OAAAwF,EAAA,EAAAxF,CAAA,GACFK,EADL,CAEE4L,eAAgBU,EAAOzP,UAE3B,QACE,OAAOmD,IEvCXmH,aDNa,WAAuC,IAA9BnH,EAA8BqJ,UAAA1E,OAAA,QAAA0H,IAAAhD,UAAA,GAAAA,UAAA,GAAtB4C,GAAcK,EAAQjD,UAAA1E,OAAA,EAAA0E,UAAA,QAAAgD,EACpD,OAAQC,EAAO1P,MACb,IxBUgC,uBwBT9B,OAAO+C,OAAAwF,EAAA,EAAAxF,CAAA,GACFK,EADL,CAEE4F,aAAc0G,EAAOzP,UAEzB,IxBQ+B,sBwBP7B,OAAO8C,OAAAwF,EAAA,EAAAxF,CAAA,GACFK,EADL,CAEE4F,aAAajG,OAAAoB,EAAA,EAAApB,CAAKK,EAAM4F,cAAZ5E,OAAA,CAA0BsL,EAAOzP,YAEjD,QACE,OAAOmD,MEbPuM,GAAa,CAACC,MAWLC,GATDC,aACZC,GALmB,GAOnBC,aACEC,KAAezD,WAAf,EAAmBmD,IACnBO,OAAOC,8BAAgCD,OAAOC,iCCiBnCC,oLAlBX,OACEpO,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAUR,MAAOA,IACf7N,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAACoO,EAAD,MACAtO,EAAAC,EAAAC,cAACqO,EAAA,EAAD,KACEvO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,KACExO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7L,IACjC/C,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAW9B,KACrC9M,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAW7L,IACxC/C,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWlK,eAXpC9D,aCEEiO,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOlP,EAAAC,EAAAC,cAACiP,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzQ,KAAK,SAAA0Q,GACjCA,EAAaC","file":"static/js/main.b07b6631.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book.43596fee.jpeg\";","import { \r\n    RESPONSE_MESSAGE_ERROR,\r\n    SET_UNAUTHORIZATED\r\n} from './types';\r\n\r\n\r\n\r\nexport default (err, dispatch)=> {\r\n    console.log('error data: ',err.response)\r\n    let message = '';\r\n    if(err.response && err.response.data && err.response.data.message){\r\n        message = err.response.data.message;\r\n    }else{\r\n        message = err;\r\n    }\r\n    dispatch({\r\n        type: RESPONSE_MESSAGE_ERROR,\r\n        payload: message.toString()\r\n    });\r\n    if(err && err.response && err.response.status===401){\r\n        dispatch({\r\n            type: SET_UNAUTHORIZATED,\r\n            payload: true\r\n        });\r\n    }\r\n}","export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_UP = \"SIGN_UP\";\r\nexport const FETCH_BOOKS = \"FETCH_BOOKS\";\r\nexport const FETCH_BOOK = \"FETCH_BOOK\";\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\r\nexport const RESPONSE_MESSAGE_ERROR = \"RESPONSE_MESSAGE_ERROR\";\r\nexport const RESPONSE_MESSAGE_SUCCESS = \"RESPONSE_MESSAGE_SUCCESS\";\r\nexport const USER_GET = \"USER_GET\";\r\nexport const USERS_GET = \"USERS_GET\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const ADD_BOOK = \"ADD_BOOK\";\r\nexport const UPDATE_BOOK = \"UPDATE_BOOK\";\r\nexport const DELETE_BOOK = \"DELETE_BOOK\";\r\nexport const ORDER_CREATE = \"ORDER_CREATE\";\r\nexport const ORDER_CONFIRM_REJECT = \"ORDER_CONFIRM_REJECT\";\r\nexport const ORDER_DELETE = \"ORDER_DELETE\";\r\nexport const SET_UNAUTHORIZATED = \"SET_UNAUTHORIZATED\";\r\nexport const SET_BOOKS_INTO_ORDER = \"SET_BOOKS_INTO_ORDER\";\r\nexport const SET_NUMBER_INTO_ORDER = \"SET_NUMBER_INTO_ORDER\";\r\nexport const SET_DESCRIPRION_INTO_ORDER = \"SET_DESCRIPRION_INTO_ORDER\";\r\nexport const ADD_BOOK_INTO_ORDER = \"ADD_BOOK_INTO_ORDER\";\r\nexport const SHOW_APP_WARNING = \"SHOW_APP_WARNING\";\r\nexport const SHOW_APP_SUCCESS = \"SHOW_APP_SUCCESS\";\r\n","import { SIGN_IN, SIGN_UP, RESPONSE_MESSAGE_ERROR, RESPONSE_MESSAGE_SUCCESS, USER_GET, SET_UNAUTHORIZATED } from './types';\r\nimport axios from 'axios';\r\nimport dispatchError from './dispatchError';\r\n\r\naxios.defaults.headers.common['Authorization'] = localStorage.getItem('jwt_token')\r\n\r\nconst dispatchSuccess = (message, dispatch)=> dispatch({\r\n    type: RESPONSE_MESSAGE_SUCCESS,\r\n    payload: message\r\n});\r\n\r\nexport const setUnauthorizated = ({ param }) => dispatch => {   \r\n    dispatch({\r\n        type: SET_UNAUTHORIZATED,\r\n        payload: !!param\r\n    });\r\n};\r\n\r\nexport const registerFailed = ({ message }) => dispatch => {   \r\n    dispatch({\r\n        type: RESPONSE_MESSAGE_ERROR,\r\n        payload: message\r\n    });\r\n;}\r\n\r\nexport const authorizate = ({login,password}) => dispatch => {   \r\n    axios.post('/auth',{\r\n        email: login,\r\n        password: password\r\n    })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        const token = 'jwt ' + json.token\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n        localStorage.setItem('jwt_token', token)\r\n        localStorage.setItem('user', JSON.stringify(json.user))\r\n\r\n        dispatch({\r\n            type: SIGN_IN,\r\n            payload: token\r\n        });\r\n        dispatch({\r\n            type: USER_GET,\r\n            payload: json.user\r\n        });\r\n        setTimeout(()=>{\r\n            dispatchSuccess(json.message,dispatch);\r\n        },0)\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const register = ({login,password, fullname, phone}) => dispatch => {   \r\n    axios.post('/register',{\r\n        email: login,\r\n        password,\r\n        fullname,\r\n        phone\r\n    })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: SIGN_UP,\r\n            payload: json.user\r\n        });\r\n\r\n        dispatchSuccess(json.message,dispatch);\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const getUser = () => dispatch => {   \r\n    axios.get('/get-user')\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: USER_GET,\r\n            payload: json.user\r\n        });\r\n        \r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardText, CardBody, Button } from \"reactstrap\";\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.forceUnmount();\r\n    }, 3000);\r\n  }\r\n  render() {\r\n    const {\r\n      message,\r\n      titleResolve,\r\n      titleReject,\r\n      resolve,\r\n      reject,\r\n      type\r\n    } = this.props;\r\n    let buttonResolve =\r\n      titleResolve && resolve ? (\r\n        <Button color=\"success\" onClick={resolve}>\r\n          {titleResolve}\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      );\r\n    let buttonReject =\r\n      titleReject && reject ? (\r\n        <Button color=\"danger\" onClick={reject}>\r\n          {titleReject}\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      );\r\n    let styledBorder = {};\r\n    switch (type) {\r\n      case \"success\":\r\n        styledBorder = {\r\n          border: \"3px solid green\"\r\n        };\r\n        break;\r\n      case \"error\":\r\n        styledBorder = {\r\n          border: \"3px solid red\"\r\n        };\r\n        break;\r\n      default:\r\n        styledBorder = {\r\n          border: \"3px solid black\"\r\n        };\r\n        break;\r\n    }\r\n    return (\r\n      <div className=\"simple-modal\" style={styledBorder}>\r\n        <Card style={{ background: \"rgb(0,0,0,0.7)\", color: \"white\" }}>\r\n          <CardBody>\r\n            <CardText>{message}</CardText>\r\n            {buttonResolve}\r\n            {buttonReject}\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nexport class MessageModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [], // arr of objs\r\n      currentID: 0\r\n    };\r\n    this.deleteById = this.deleteById.bind(this);\r\n  }\r\n  deleteById(id) {\r\n    const messages = this.state.messages.filter(messageObj => {\r\n      return messageObj.id !== id;\r\n    });\r\n    this.setState({ messages });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.messageObj) {\r\n      console.log(\"Setting new message... \", nextProps.messageObj);\r\n      this.setState({\r\n        messages: [\r\n          ...this.state.messages,\r\n          {\r\n            message: nextProps.messageObj.text,\r\n            type: nextProps.messageObj.type,\r\n            titleResolve: nextProps.messageObj.titleResolve,\r\n            titleReject: nextProps.messageObj.titleReject,\r\n            resolve: nextProps.messageObj.resolve,\r\n            reject: nextProps.messageObj.reject,\r\n            id: this.state.currentID\r\n          }\r\n        ]\r\n      });\r\n      this.setState({ currentID: this.state.currentID + 1 });\r\n    }\r\n  }\r\n  render() {\r\n    const modals = this.state.messages.map(messageObj => (\r\n      <Modal\r\n        key={messageObj.id}\r\n        message={messageObj.message}\r\n        type={messageObj.type}\r\n        titleResolve={messageObj.titleResolve}\r\n        titleReject={messageObj.titleReject}\r\n        resolve={() => {\r\n          if (typeof messageObj.resolve === \"function\") {\r\n            messageObj.resolve();\r\n          }\r\n          this.deleteById(messageObj.id);\r\n        }}\r\n        reject={() => {\r\n          if (typeof messageObj.reject === \"function\") {\r\n            messageObj.reject();\r\n          }\r\n          this.deleteById(messageObj.id);\r\n        }}\r\n        forceUnmount={() => {\r\n          this.deleteById(messageObj.id);\r\n        }}\r\n      />\r\n    ));\r\n    return <div className=\"modal-wrapper\">{modals}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  messageObj: state.message.message\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(MessageModal);\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport MessageModal from \"../containers/MessageModal\";\r\n\r\nexport default ({ children }) => (\r\n  <Container className=\"app-container auth-container\">\r\n    <Row className=\"justify-content-center align-items-center\">\r\n      <Col xs={6}>{children}</Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { authorizate, setUnauthorizated } from \"../actions/authActions\";\r\nimport AuthTemplate from \"../templates/AuthTemplate\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: \"\",\r\n      password: \"\"\r\n    };\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setUnauthorizated(false);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.token) {\r\n      console.log(\"Redirecting to Main page...\");\r\n      setTimeout(() => {\r\n        this.props.history.push(\"/main\");\r\n      }, 100);\r\n    }\r\n  }\r\n  handleSignIn(e) {\r\n    e.preventDefault();\r\n    this.props.authorizate({\r\n      login: this.state.login,\r\n      password: this.state.password\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <AuthTemplate>\r\n        <Form className=\"auth-form\">\r\n          <FormGroup>\r\n            <Label for=\"exampleEmail\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"exampleEmail\"\r\n              placeholder=\"Your email\"\r\n              onChange={e => {\r\n                this.setState({ login: e.target.value });\r\n              }}\r\n              value={this.state.login}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword\"\r\n              placeholder=\"Your password...\"\r\n              onChange={e => {\r\n                this.setState({ password: e.target.value });\r\n              }}\r\n              value={this.state.password}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label>Not Registered?</Label>\r\n            <br />\r\n            <Link to=\"/sign-up\">Create an accaunt</Link>\r\n          </FormGroup>\r\n          <Button onClick={this.handleSignIn}>Sign in</Button>\r\n        </Form>\r\n      </AuthTemplate>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  token: state.auth.token\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { authorizate, setUnauthorizated }\r\n)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { register, registerFailed } from '../actions/authActions';\r\nimport AuthTemplate from '../templates/AuthTemplate';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class SignUp extends Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        login:'',\r\n        password:'',\r\n        passwordConfirm:'',\r\n        fullname:'',\r\n        phone:''\r\n      };\r\n      this.handleSignUp = this.handleSignUp.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.user){\r\n        console.log('Redirect to Main page...');\r\n        setTimeout(()=>{\r\n            this.props.history.push('/sign-in');\r\n        },100);\r\n    }\r\n  }  \r\n  \r\n   \r\n  handleSignUp(e){\r\n    e.preventDefault();\r\n    const { login, password, passwordConfirm, fullname, phone } = this.state;\r\n    if(password === passwordConfirm){\r\n        this.props.register({ login, password, fullname, phone });\r\n    }else{\r\n        this.props.registerFailed({\r\n            message: 'Your confirm password is not equal password'\r\n        });\r\n    }\r\n  }  \r\n  render() {\r\n    return (\r\n        <AuthTemplate>\r\n            <Form className='auth-form'>\r\n                <FormGroup>\r\n                    <Label for=\"Email\">Email</Label>\r\n                    <Input \r\n                        type=\"email\" \r\n                        name=\"email\" \r\n                        id=\"Email\" \r\n                        placeholder=\"Your email\"\r\n                        onChange={(e)=>{\r\n                            this.setState({login: e.target.value});\r\n                        }}\r\n                        value={this.state.login}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"Password\">Password</Label>\r\n                    <Input \r\n                        type=\"password\" \r\n                        name=\"password\" \r\n                        id=\"Password\" \r\n                        placeholder=\"Your password...\"\r\n                        onChange={(e)=>{\r\n                            this.setState({password: e.target.value});\r\n                        }}\r\n                        value={this.state.password}\r\n                        />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"PasswordConfirm\">Confirm password</Label>\r\n                    <Input \r\n                        type=\"password\" \r\n                        name=\"passwordConfirm\" \r\n                        id=\"PasswordConfirm\" \r\n                        placeholder=\"Confirm your password...\"\r\n                        onChange={(e)=>{\r\n                            this.setState({passwordConfirm: e.target.value});\r\n                        }}\r\n                        value={this.state.passwordConfirm}\r\n                        />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"Fullname\">Fullname</Label>\r\n                    <Input \r\n                        type=\"text\" \r\n                        name=\"fullname\" \r\n                        id=\"Fullname\" \r\n                        placeholder=\"Your fullname...\"\r\n                        onChange={(e)=>{\r\n                            this.setState({fullname: e.target.value});\r\n                        }}\r\n                        value={this.state.fullname}\r\n                        />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"Phone\">Phone</Label>\r\n                    <Input \r\n                        type=\"phone\" \r\n                        name=\"phone\" \r\n                        id=\"Phone\" \r\n                        placeholder=\"Your phone...\"\r\n                        onChange={(e)=>{\r\n                            this.setState({phone: e.target.value});\r\n                        }}\r\n                        value={this.state.phone}\r\n                        />\r\n                </FormGroup>\r\n                <Button onClick={this.handleSignUp}>Sign Up</Button>\r\n            </Form>\r\n        </AuthTemplate>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps,{ register, registerFailed })(SignUp)\r\n","export default {\r\n    ROLE_USER: 1,\r\n    ROLE_ADMIN: 2,\r\n    ORDER_STATUS_SUCCESS: 1,\r\n    ORDER_STATUS_INPROCESS: 2,\r\n    ORDER_STATUS_REJECTED: 0,\r\n    ORDER_STATUS_NEW: 3,\r\n}","import React from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nexport default function NavCurrentOrder(props) {\r\n  return (\r\n    <div onClick={props.handleClick}>\r\n      CurrentOrder\r\n      <Badge color=\"primary\" style={{ marginLeft: \"5px\" }}>\r\n        {+props.booksNumber}\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n","import { RESPONSE_MESSAGE_ERROR, RESPONSE_MESSAGE_SUCCESS, FETCH_BOOKS, FETCH_ORDERS, USERS_GET, SET_UNAUTHORIZATED } from './types';\r\nimport axios from 'axios';\r\nimport dispatchError from './dispatchError';\r\n\r\naxios.defaults.headers.common['Authorization'] = localStorage.getItem('jwt_token')\r\n\r\nconst dispatchSuccess = (message, dispatch)=> dispatch({\r\n    type: RESPONSE_MESSAGE_SUCCESS,\r\n    payload: message\r\n});\r\n\r\nexport const fetchBooks = () => dispatch => {   \r\n    axios.get('/get-books')\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        dispatch({\r\n            type: FETCH_BOOKS,\r\n            payload: json.books\r\n        });\r\n    })\r\n    .catch((err)=>{\r\n        dispatchError(err,dispatch)\r\n    });\r\n};\r\n\r\nexport const fetchOrders = () => dispatch => {   \r\n    axios.get('/get-orders')\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: FETCH_ORDERS,\r\n            payload: json.orders\r\n        });\r\n\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\nexport const fetchUsers = () => dispatch => {   \r\n    axios.get('/get-users')\r\n    .then(res => res.data)\r\n    .then(json => {\r\n        \r\n        dispatch({\r\n            type: USERS_GET,\r\n            payload: json.users\r\n        });\r\n\r\n    })\r\n    .catch(err=>dispatchError(err,dispatch));\r\n};\r\n\r\n","import {\r\n  RESPONSE_MESSAGE_SUCCESS,\r\n  USER_UPDATED,\r\n  USER_DELETED,\r\n  ADD_BOOK,\r\n  DELETE_BOOK,\r\n  UPDATE_BOOK,\r\n  ORDER_CREATE,\r\n  ORDER_CONFIRM_REJECT,\r\n  ORDER_DELETE,\r\n  SET_BOOKS_INTO_ORDER,\r\n  ADD_BOOK_INTO_ORDER,\r\n  SHOW_APP_WARNING,\r\n  SHOW_APP_SUCCESS\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport dispatchError from \"./dispatchError\";\r\nimport { fetchBooks } from \"./dataActions\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\r\n  \"jwt_token\"\r\n);\r\n\r\nexport const showAppWarning = message => dispatch => {\r\n  dispatch({\r\n    type: SHOW_APP_WARNING,\r\n    payload: message\r\n  });\r\n};\r\n\r\nconst dispatchSuccess = (message, dispatch) =>\r\n  dispatch({\r\n    type: RESPONSE_MESSAGE_SUCCESS,\r\n    payload: message\r\n  });\r\n\r\nexport const updateUser = ({\r\n  userId,\r\n  email,\r\n  password,\r\n  fullname,\r\n  role,\r\n  phone\r\n}) => dispatch => {\r\n  axios\r\n    .put(`/update-user/${userId}`, { email, password, fullname, role, phone })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n      dispatch({\r\n        type: USER_UPDATED,\r\n        payload: json.user\r\n      });\r\n      dispatchSuccess(json.message, dispatch);\r\n    })\r\n    .catch(err => dispatchError(err, dispatch));\r\n};\r\n\r\nexport const deleteUser = ({ userId }) => dispatch => {\r\n  axios\r\n    .delete(`/delete-user/${userId}`)\r\n    .then(res => res.data)\r\n    .then(json => {\r\n      dispatch({\r\n        type: USER_DELETED,\r\n        payload: json.user\r\n      });\r\n\r\n      dispatchSuccess(json.message, dispatch);\r\n    })\r\n    .catch(err => dispatchError(err, dispatch));\r\n};\r\n\r\nexport const addBook = ({\r\n  name,\r\n  author,\r\n  pagesNumber,\r\n  category,\r\n  description,\r\n  price,\r\n  count\r\n}) => dispatch => {\r\n  axios\r\n    .post(`/add-book`, {\r\n      name,\r\n      author,\r\n      pagesNumber,\r\n      category,\r\n      description,\r\n      price,\r\n      count\r\n    })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n      dispatch({\r\n        type: ADD_BOOK,\r\n        payload: json.book\r\n      });\r\n      fetchBooks()(dispatch);\r\n      dispatchSuccess(json.message, dispatch);\r\n    })\r\n    .catch(err => dispatchError(err, dispatch));\r\n};\r\n\r\nexport const deleteBook = ({ bookId }) => dispatch => {\r\n  axios\r\n    .delete(`/delete-book/${bookId}`)\r\n    .then(res => res.data)\r\n    .then(json => {\r\n      dispatch({\r\n        type: DELETE_BOOK,\r\n        payload: json.book\r\n      });\r\n\r\n      dispatchSuccess(json.message, dispatch);\r\n    })\r\n    .catch(err => dispatchError(err, dispatch));\r\n};\r\n\r\nexport const updateBook = ({\r\n  bookId,\r\n  name,\r\n  author,\r\n  pagesNumber,\r\n  category,\r\n  description,\r\n  price,\r\n  count\r\n}) => dispatch => {\r\n  axios\r\n    .put(`/update-book/${bookId}`, {\r\n      name,\r\n      author,\r\n      pagesNumber,\r\n      category,\r\n      description,\r\n      price,\r\n      count\r\n    })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n      dispatch({\r\n        type: UPDATE_BOOK,\r\n        payload: json.book\r\n      });\r\n\r\n      dispatchSuccess(json.message, dispatch);\r\n    })\r\n    .catch(err => dispatchError(err, dispatch));\r\n};\r\n\r\nexport const createOrder = ({\r\n  orderNumber,\r\n  description,\r\n  orderedBooks\r\n}) => dispatch => {\r\n  axios\r\n    .post(`/create-order`, { orderNumber, description, orderedBooks })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n      dispatch({\r\n        type: ORDER_CREATE,\r\n        payload: json.order\r\n      });\r\n\r\n      dispatchSuccess(json.message, dispatch);\r\n    })\r\n    .catch(err => dispatchError(err, dispatch));\r\n};\r\n\r\nexport const confirmRejectOrder = ({\r\n  confirm,\r\n  id,\r\n  statusDescription\r\n}) => dispatch => {\r\n  axios\r\n    .post(`/confirm-reject-order`, { confirm, id, statusDescription })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n      dispatch({\r\n        type: ORDER_CONFIRM_REJECT,\r\n        payload: json.order.status\r\n      });\r\n\r\n      dispatchSuccess(json.message, dispatch);\r\n    })\r\n    .catch(err => dispatchError(err, dispatch));\r\n};\r\n\r\nexport const deleteOrder = ({ id }) => dispatch => {\r\n  axios\r\n    .delete(`/delete-order/${id}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(res => res.data)\r\n    .then(json => {\r\n      dispatch({\r\n        type: ORDER_DELETE,\r\n        payload: json.order\r\n      });\r\n      dispatchSuccess(json.message, dispatch);\r\n    })\r\n    .catch(err => dispatchError(err, dispatch));\r\n};\r\n\r\nexport const setBooksIntoOrder = ({ orderedBooks, message }) => dispatch => {\r\n  dispatch({\r\n    type: SET_BOOKS_INTO_ORDER,\r\n    payload: orderedBooks\r\n  });\r\n};\r\n\r\nexport const addBookIntoOrder = ({ book, message }) => dispatch => {\r\n  dispatch({\r\n    type: ADD_BOOK_INTO_ORDER,\r\n    payload: book\r\n  });\r\n  dispatch({\r\n    type: SHOW_APP_SUCCESS,\r\n    payload: message\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nclass ModalComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      fields: {}\r\n    };\r\n    //field {\r\n    //  name title type value\r\n    //}\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.fields && this.props.fields.length) {\r\n      const fields = {};\r\n      this.props.fields.forEach(field => {\r\n        fields[field.name] = field;\r\n      });\r\n      this.setState({\r\n        fields\r\n      });\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const bodyEntry = [];\r\n    if (Object.keys(this.state.fields).length) {\r\n      for (let _field in this.state.fields) {\r\n        const field = this.state.fields[_field];\r\n        bodyEntry.push(\r\n          <FormGroup key={field.name}>\r\n            <Label>{field.title}</Label>\r\n            <Input\r\n              type={field.type}\r\n              onChange={e => {\r\n                //console.log('Field in handler',field);\r\n                this.setState({\r\n                  fields: {\r\n                    ...this.state.fields,\r\n                    [field.name]: {\r\n                      ...this.state.fields[field.name],\r\n                      value: e.target.value\r\n                    }\r\n                  }\r\n                });\r\n              }}\r\n              value={this.state.fields[field.name].value}\r\n            />\r\n          </FormGroup>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <Button color={this.props.btnColor} onClick={this.toggle}>\r\n          {this.props.buttonLabel}\r\n        </Button>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}\r\n        >\r\n          <ModalHeader toggle={this.toggle}>{this.props.title}</ModalHeader>\r\n          <ModalBody>{bodyEntry}</ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"success\"\r\n              onClick={() => {\r\n                this.toggle();\r\n                const fields = {};\r\n                for (const key in this.state.fields) {\r\n                  if (this.state.fields[key].value) {\r\n                    fields[key] = this.state.fields[key].value;\r\n                  }\r\n                }\r\n                this.props.resolve(fields);\r\n              }}\r\n            >\r\n              Ok\r\n            </Button>{\" \"}\r\n            <Button color=\"danger\" onClick={this.toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport config from \"../config\";\r\nimport NavCurrentOrder from \"../components/NavCurrentOrder\";\r\nimport { addBook } from \"../actions/doActions\";\r\nimport ModalComponent from \"../components/ModalComponent\";\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false,\r\n      booksNubmer: 0\r\n    };\r\n    this.addBook = this.addBook.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.orderedBooks) {\r\n      let booksCount = 0;\r\n      nextProps.orderedBooks.forEach(book => {\r\n        booksCount += book.count;\r\n      });\r\n      this.setState({\r\n        booksNubmer: booksCount\r\n      });\r\n    }\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  addBook({ name, author, pagesNumber, category, description, price, count }) {\r\n    this.props.addBook({\r\n      name,\r\n      author,\r\n      pagesNumber,\r\n      category,\r\n      description,\r\n      price,\r\n      count\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nav-bar-container\">\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"#/sign-in\">Library</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              {this.props.user && this.props.user.role === config.ROLE_USER ? (\r\n                <NavItem>\r\n                  <NavLink>\r\n                    <NavCurrentOrder\r\n                      booksNumber={this.state.booksNubmer}\r\n                      handleClick={this.props.showCurrentOrder}\r\n                    />\r\n                  </NavLink>\r\n                </NavItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <NavItem>\r\n                <NavLink onClick={this.props.showBooksCatalog}>\r\n                  Books catalog\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink onClick={this.props.showOrders}>Orders</NavLink>\r\n              </NavItem>\r\n              {this.props.user && this.props.user.role === config.ROLE_ADMIN ? (\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret>\r\n                    Admin Options\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    <DropdownItem>\r\n                      <ModalComponent\r\n                        buttonLabel=\"Add new book\"\r\n                        title=\"Add new book\"\r\n                        resolve={fields => {\r\n                          const {\r\n                            name,\r\n                            author,\r\n                            pagesNumber,\r\n                            category,\r\n                            description,\r\n                            price,\r\n                            count\r\n                          } = fields;\r\n                          this.addBook({\r\n                            name,\r\n                            author,\r\n                            pagesNumber,\r\n                            category,\r\n                            description,\r\n                            price,\r\n                            count\r\n                          });\r\n                        }}\r\n                        btnColor=\"primary\"\r\n                        fields={[\r\n                          {\r\n                            title: \"Name\",\r\n                            name: \"name\",\r\n                            type: \"text\",\r\n                            value: \"\"\r\n                          },\r\n                          {\r\n                            title: \"Author\",\r\n                            name: \"author\",\r\n                            type: \"text\",\r\n                            value: \"\"\r\n                          },\r\n                          {\r\n                            title: \"Pages\",\r\n                            name: \"pagesNumber\",\r\n                            type: \"number\",\r\n                            value: 0\r\n                          },\r\n                          {\r\n                            title: \"Category\",\r\n                            name: \"category\",\r\n                            type: \"number\",\r\n                            value: 0\r\n                          },\r\n                          {\r\n                            title: \"Description\",\r\n                            name: \"description\",\r\n                            type: \"text\",\r\n                            value: \"\"\r\n                          },\r\n                          {\r\n                            title: \"Price\",\r\n                            name: \"price\",\r\n                            type: \"number\",\r\n                            value: 0\r\n                          },\r\n                          {\r\n                            title: \"Count\",\r\n                            name: \"count\",\r\n                            type: \"number\",\r\n                            value: 1\r\n                          }\r\n                        ]}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>Disabled option</DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user,\r\n  orderedBooks: state.currentOrder.orderedBooks\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addBook }\r\n)(NavBar);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport NavBar from \"../containers/NavBar\";\r\n\r\nclass MainTemplate extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar\r\n          showBooksCatalog={this.props.showBooksCatalog}\r\n          showOrders={this.props.showOrders}\r\n          showCurrentOrder={this.props.showCurrentOrder}\r\n        />\r\n        <Container className=\"app-container main-container\">\r\n          <Row className=\"justify-content-center align-items-center\">\r\n            <Col xs={10}>{this.props.children}</Col>\r\n          </Row>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainTemplate;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle\r\n} from \"reactstrap\";\r\nimport img from \"../images/book.jpeg\";\r\nimport config from \"../config\";\r\nimport ModalComponent from \"./ModalComponent\";\r\n\r\nconst CardComponent = props => {\r\n  return (\r\n    <Card className=\"card-container\">\r\n      <CardImg src={img} alt=\"Card image cap\" />\r\n      <CardBody>\r\n        <CardTitle>{props.name}</CardTitle>\r\n        <CardSubtitle>Author: {props.author}</CardSubtitle>\r\n        <CardSubtitle>Price: {props.price}</CardSubtitle>\r\n        <CardSubtitle>Category: {props.category}</CardSubtitle>\r\n        <CardSubtitle>Availability: {props.count}</CardSubtitle>\r\n        <CardText>{props.description}</CardText>\r\n        <div className=\"btn-group-custom\">\r\n          {props.role === config.ROLE_USER ? (\r\n            <ModalComponent\r\n              buttonLabel=\"Buy\"\r\n              title=\"Should put this book into order?\"\r\n              resolve={fields => {\r\n                let { count } = fields;\r\n                count = parseInt(count);\r\n                if (count <= props.count) {\r\n                  props.addBook({ count, bookId: props._id });\r\n                } else {\r\n                  props.showWarning(\r\n                    `Books count must be less than ${props.count + 1}`\r\n                  );\r\n                }\r\n              }}\r\n              btnColor=\"success\"\r\n              fields={[\r\n                { title: \"Count\", name: \"count\", type: \"number\", value: 1 }\r\n              ]}\r\n            />\r\n          ) : (\r\n            <>\r\n              <ModalComponent\r\n                buttonLabel=\"Delete book\"\r\n                title=\"Should delete this book?\"\r\n                resolve={() => {\r\n                  props.handleDeleteBook(props._id);\r\n                }}\r\n                btnColor=\"danger\"\r\n              />\r\n              <ModalComponent\r\n                buttonLabel=\"Update\"\r\n                title=\"Update book\"\r\n                resolve={fields => {\r\n                  const {\r\n                    name,\r\n                    author,\r\n                    countPagesNumber,\r\n                    countCategory,\r\n                    description,\r\n                    countPrice,\r\n                    count\r\n                  } = fields;\r\n                  const bookId = props._id;\r\n                  props.handleUpdateBook({\r\n                    bookId,\r\n                    name,\r\n                    author,\r\n                    countPagesNumber,\r\n                    countCategory,\r\n                    description,\r\n                    countPrice,\r\n                    count\r\n                  });\r\n                }}\r\n                btnColor=\"primary\"\r\n                fields={[\r\n                  {\r\n                    title: \"Name\",\r\n                    name: \"name\",\r\n                    type: \"text\",\r\n                    value: props.name\r\n                  },\r\n                  {\r\n                    title: \"Author\",\r\n                    name: \"author\",\r\n                    type: \"text\",\r\n                    value: props.author\r\n                  },\r\n                  {\r\n                    title: \"Pages\",\r\n                    name: \"countPagesNumber\",\r\n                    type: \"number\",\r\n                    value: props.pagesNumber\r\n                  },\r\n                  {\r\n                    title: \"Category\",\r\n                    name: \"countCategory\",\r\n                    type: \"number\",\r\n                    value: props.category\r\n                  },\r\n                  {\r\n                    title: \"Description\",\r\n                    name: \"description\",\r\n                    type: \"text\",\r\n                    value: props.description\r\n                  },\r\n                  {\r\n                    title: \"Price\",\r\n                    name: \"countPrice\",\r\n                    type: \"number\",\r\n                    value: props.price\r\n                  },\r\n                  {\r\n                    title: \"Count\",\r\n                    name: \"count\",\r\n                    type: \"number\",\r\n                    value: props.count\r\n                  }\r\n                ]}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchBooks } from \"../actions/dataActions\";\r\nimport { getUser } from \"../actions/authActions\";\r\nimport {\r\n  deleteBook,\r\n  updateBook,\r\n  addBookIntoOrder,\r\n  showAppWarning\r\n} from \"../actions/doActions\";\r\nimport CardComponent from \"./CardComponent\";\r\n\r\nclass BooksCatalog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: []\r\n    };\r\n    this.handleDeleteBook = this.handleDeleteBook.bind(this);\r\n    this.handleUpdateBook = this.handleUpdateBook.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.books) {\r\n      this.setState({ books: nextProps.books });\r\n    }\r\n  }\r\n  handleDeleteBook(id) {\r\n    if (id) {\r\n      this.props.deleteBook({ bookId: id });\r\n    } else {\r\n      console.log(\"Expects _id:\", id);\r\n    }\r\n    const newBooks = this.state.books.filter(book => {\r\n      return book._id !== id;\r\n    });\r\n    this.setState({\r\n      books: newBooks\r\n    });\r\n  }\r\n  handleUpdateBook({\r\n    bookId,\r\n    name,\r\n    author,\r\n    countPagesNumber,\r\n    countCategory,\r\n    description,\r\n    countPrice,\r\n    count\r\n  }) {\r\n    const pagesNumber = countPagesNumber;\r\n    const category = countCategory;\r\n    const price = countPrice;\r\n    if (bookId) {\r\n      this.props.updateBook({\r\n        bookId,\r\n        name,\r\n        author,\r\n        pagesNumber,\r\n        category,\r\n        description,\r\n        price,\r\n        count\r\n      });\r\n    } else {\r\n      console.log(\"Expects _id:\", bookId);\r\n    }\r\n    const newBooks = this.state.books.filter(book => {\r\n      return book._id !== bookId;\r\n    });\r\n    newBooks.unshift({\r\n      bookId,\r\n      name,\r\n      author,\r\n      pagesNumber,\r\n      category,\r\n      description,\r\n      price,\r\n      count\r\n    });\r\n    this.setState({\r\n      books: newBooks\r\n    });\r\n  }\r\n  addBook({ count, bookId }) {\r\n    if (bookId) {\r\n      const book = { count, bookId };\r\n      const message = \"Books successfully added to current order\";\r\n      this.props.addBookIntoOrder({ book, message });\r\n    } else {\r\n      console.log(\"Expects _id\", bookId);\r\n    }\r\n  }\r\n  showWarning(message) {\r\n    this.props.showAppWarning(message);\r\n  }\r\n  render() {\r\n    const books = this.state.books.map((book, i) => (\r\n      <li key={i}>\r\n        <CardComponent\r\n          {...book}\r\n          role={this.props.user.role}\r\n          showWarning={message => {\r\n            this.showWarning(message);\r\n          }}\r\n          addBook={({ count, bookId }) => {\r\n            this.addBook({ count, bookId });\r\n          }}\r\n          handleDeleteBook={id => {\r\n            this.handleDeleteBook(id);\r\n          }}\r\n          handleUpdateBook={({\r\n            bookId,\r\n            name,\r\n            author,\r\n            countPagesNumber,\r\n            countCategory,\r\n            description,\r\n            countPrice,\r\n            count\r\n          }) => {\r\n            this.handleUpdateBook({\r\n              bookId,\r\n              name,\r\n              author,\r\n              countPagesNumber,\r\n              countCategory,\r\n              description,\r\n              countPrice,\r\n              count\r\n            });\r\n          }}\r\n        />\r\n      </li>\r\n    ));\r\n    const rendered = books.length ? books : \"Loading...\";\r\n    return (\r\n      <div className=\"books-catalog-wrapper\">\r\n        <ul>{rendered}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  books: state.data.books,\r\n  user: state.auth.user\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    fetchBooks,\r\n    getUser,\r\n    deleteBook,\r\n    updateBook,\r\n    showAppWarning,\r\n    addBookIntoOrder\r\n  }\r\n)(BooksCatalog);\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardText, CardBody, CardTitle, Badge } from \"reactstrap\";\r\nimport config from \"../config\";\r\nimport ModalComponent from \"./ModalComponent\";\r\n\r\nexport class OrderComponent extends Component {\r\n  render() {\r\n    const orderedBooks = this.props.orderedBooks.map(book => (\r\n      <li key={book.bookDetails._id} className=\"ordered-books\">\r\n        <div className=\"book-info-wrapper\">\r\n          <span>Name: {book.bookDetails.name}</span>\r\n          <span>Author: {book.bookDetails.Author}</span>\r\n          <span>Count: {book.count}</span>\r\n          <span>Price: {book.bookDetails.price}</span>\r\n        </div>\r\n      </li>\r\n    ));\r\n    let status;\r\n    switch (this.props.status) {\r\n      case config.ORDER_STATUS_INPROCESS:\r\n        status = (\r\n          <Badge disabled color=\"warning\">\r\n            In progress\r\n          </Badge>\r\n        );\r\n        break;\r\n      case config.ORDER_STATUS_NEW:\r\n        status = (\r\n          <Badge disabled color=\"primary\">\r\n            New order\r\n          </Badge>\r\n        );\r\n        break;\r\n      case config.ORDER_STATUS_SUCCESS:\r\n        status = (\r\n          <Badge disabled color=\"success\">\r\n            Already complited\r\n          </Badge>\r\n        );\r\n        break;\r\n      case config.ORDER_STATUS_REJECTED:\r\n        status = (\r\n          <Badge disabled color=\"danger\">\r\n            Already rejected\r\n          </Badge>\r\n        );\r\n        break;\r\n      default:\r\n        status = \"No status found\";\r\n    }\r\n    return (\r\n      <Card className=\"card-container\">\r\n        <CardBody>\r\n          <CardTitle>Order Number: {this.props.orderNumber}</CardTitle>\r\n          <CardText>\r\n            <b>Summary:</b> {this.props.summary}\r\n          </CardText>\r\n          <CardText>\r\n            <b>Status:</b> {status}\r\n          </CardText>\r\n          <CardText>\r\n            <b>Description:</b> {this.props.description}\r\n          </CardText>\r\n          {this.props.statusDescription ? (\r\n            <CardText>\r\n              <b>Status Description:</b> {this.props.statusDescription}\r\n            </CardText>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {orderedBooks.length ? (\r\n            <ul>\r\n              <b>Ordered Books:</b> {orderedBooks}\r\n            </ul>\r\n          ) : (\r\n            <b>\r\n              No books here! <br />\r\n            </b>\r\n          )}\r\n          <div className=\"btn-group-custom\">\r\n            {this.props.role === config.ROLE_ADMIN ? (\r\n              <>\r\n                <ModalComponent\r\n                  buttonLabel=\"Confirm\"\r\n                  title=\"Confirm order?\"\r\n                  resolve={fields => {\r\n                    const { statusDescription } = fields;\r\n                    if (statusDescription) {\r\n                      this.props.resolveRejectOrder(\r\n                        this.props._id,\r\n                        true,\r\n                        statusDescription\r\n                      );\r\n                    } else {\r\n                      this.props.resolveRejectOrder(this.props._id, true);\r\n                    }\r\n                  }}\r\n                  btnColor=\"success\"\r\n                  fields={[\r\n                    {\r\n                      title: \"Description\",\r\n                      name: \"statusDescription\",\r\n                      type: \"text\",\r\n                      value: \"\"\r\n                    }\r\n                  ]}\r\n                />\r\n                <ModalComponent\r\n                  buttonLabel=\"Reject\"\r\n                  title=\"Reject order?\"\r\n                  resolve={() => {\r\n                    this.props.resolveRejectOrder(this.props._id, false);\r\n                  }}\r\n                />\r\n                <ModalComponent\r\n                  buttonLabel=\"Delete\"\r\n                  title=\"Delete order?\"\r\n                  resolve={() => {\r\n                    this.props.deleteOrderById(this.props._id);\r\n                  }}\r\n                  btnColor=\"danger\"\r\n                />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderComponent;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchOrders } from '../actions/dataActions';\r\nimport { deleteOrder, confirmRejectOrder } from '../actions/doActions';\r\nimport OrderComponent from './OrderComponent'\r\n\r\nclass OrdersList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            orders:[],\r\n            orderStatus:null\r\n        };\r\n        this.deleteOrderById = this.deleteOrderById.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchOrders();\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        console.log('Redeived props:', nextProps)\r\n        if(nextProps.orders){\r\n            this.setState({orders: nextProps.orders})\r\n        }\r\n        if(nextProps.orderStatus !==this.state.orderStatus){\r\n            this.setState({orderStatus: nextProps.orderStatus})\r\n            this.props.fetchOrders();\r\n        }\r\n    }\r\n    deleteOrderById(id){\r\n        if(id){\r\n            this.props.deleteOrder({id});\r\n        }else{\r\n            console.log('Expects _id:', id)\r\n        }\r\n        const newOrders = this.state.orders.filter((order)=>{\r\n            return order._id !== id;\r\n        });\r\n        this.setState({\r\n            orders: newOrders\r\n        });\r\n    }\r\n    resolveRejectOrder(id,confirm,statusDescription){\r\n        if(id){\r\n            this.props.confirmRejectOrder({ confirm, id, statusDescription });\r\n        }else{\r\n            console.log('Expects _id:', id)\r\n        }\r\n        \r\n    }  \r\n    render() { \r\n        console.log(this.props)\r\n        let role = this.props.user?this.props.user.role:1;\r\n        const orders = this.state.orders.map((order)=>\r\n            <li key={order._id}><OrderComponent \r\n                {...order} \r\n                role={role} \r\n                deleteOrderById={(id)=>{this.deleteOrderById(id)}}\r\n                resolveRejectOrder={(id,confirm,statusDescription)=>{this.resolveRejectOrder(id,confirm,statusDescription)}}\r\n            /></li>\r\n        );\r\n        const rendered = orders.length?orders:'Loading...';\r\n        return (\r\n          <div className='books-catalog-wrapper' >\r\n            <ul>\r\n                {rendered}\r\n            </ul>\r\n          </div>\r\n        );\r\n    };\r\n}\r\nconst mapStateToProps = state => ({\r\n    orders: state.data.orders,\r\n    user: state.auth.user,\r\n    orderStatus: state.do.orderStatus\r\n});\r\nexport default connect(mapStateToProps,{ fetchOrders, deleteOrder, confirmRejectOrder })(OrdersList);","import React, { Component } from \"react\";\r\nimport config from \"../config\";\r\nimport { connect } from \"react-redux\";\r\nimport { createOrder, setBooksIntoOrder } from \"../actions/doActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Badge,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button\r\n} from \"reactstrap\";\r\nimport ModalComponent from \"./ModalComponent\";\r\n\r\nclass CurrentOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orderNumber: Math.round(Math.random() * 100000),\r\n      description: \"\",\r\n      orderedBooks: [],\r\n      books: []\r\n    };\r\n    this.resetOrder = this.resetOrder.bind(this);\r\n  }\r\n  resetOrder() {\r\n    const orderedBooks = [];\r\n    const message = \"Order cleaned!\";\r\n    this.props.setBooksIntoOrder({ orderedBooks, message });\r\n    this.setState({\r\n      description: \"\",\r\n      orderedBooks: []\r\n    });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.showStyle === \"block\") {\r\n      return;\r\n    }\r\n    if (nextProps.orderedBooks) {\r\n      // orderedBooks { bookId, count }\r\n      //console.log('nextProps.orderedBooks',nextProps.orderedBooks);\r\n      const orderedBooks = [];\r\n      this.state.books.forEach(book => {\r\n        for (let i = 0; i < nextProps.orderedBooks.length; i++) {\r\n          if (nextProps.orderedBooks[i].bookId === book._id) {\r\n            orderedBooks.push({\r\n              bookId: book._id,\r\n              name: book.name,\r\n              author: book.author,\r\n              price: book.price,\r\n              count: nextProps.orderedBooks[i].count\r\n            });\r\n          }\r\n        }\r\n      });\r\n      this.setState({\r\n        orderedBooks\r\n      });\r\n    }\r\n    if (nextProps.books) {\r\n      this.setState({\r\n        books: nextProps.books\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const orderedBooks = this.state.orderedBooks.map((book, i) => (\r\n      <li key={i} className=\"ordered-books\">\r\n        <div className=\"book-info-wrapper\">\r\n          <span>Name: {book.name}</span>\r\n          <span>Author: {book.author}</span>\r\n          <span>Count: {book.count}</span>\r\n          <span>Price: {book.price}</span>\r\n        </div>\r\n      </li>\r\n    ));\r\n    let summary = 0;\r\n    this.state.orderedBooks.forEach(book => {\r\n      summary += book.price * book.count;\r\n    });\r\n    return (\r\n      <div\r\n        className=\"books-catalog-wrapper\"\r\n        style={{ paddingTop: \"15px\", display: this.props.showStyle }}\r\n      >\r\n        <Card className=\"card-container\">\r\n          <CardBody>\r\n            <div>\r\n              <FormGroup>\r\n                <Label>Order Number:</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  onChange={e => {\r\n                    this.setState({ orderNumber: e.target.value });\r\n                  }}\r\n                  value={this.state.orderNumber}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n            <div>Summary: {summary}$</div>\r\n            <div>\r\n              Status:{\" \"}\r\n              <Badge disabled color=\"warning\">\r\n                In progress\r\n              </Badge>\r\n            </div>\r\n            <div>\r\n              <FormGroup>\r\n                <Label>Description:</Label>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  onChange={e => {\r\n                    this.setState({ description: e.target.value });\r\n                  }}\r\n                  value={this.state.description}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n            {orderedBooks.length ? (\r\n              <ul>\r\n                <b>Ordered Books:</b> {orderedBooks}\r\n              </ul>\r\n            ) : (\r\n              <b>\r\n                No books here! <br />\r\n              </b>\r\n            )}\r\n            <div className=\"btn-group-custom\">\r\n              <ModalComponent\r\n                btnColor=\"success\"\r\n                buttonLabel=\"Confirm order\"\r\n                title=\"Confirm order?\"\r\n                resolve={() => {\r\n                  const { orderNumber, description, orderedBooks } = this.state;\r\n                  this.props.createOrder({\r\n                    orderNumber,\r\n                    description,\r\n                    orderedBooks\r\n                  });\r\n                }}\r\n              />\r\n              <ModalComponent\r\n                btnColor=\"danger\"\r\n                buttonLabel=\"Reset\"\r\n                title=\"Reset order?\"\r\n                resolve={() => {\r\n                  this.resetOrder();\r\n                }}\r\n              />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  orderedBooks: state.currentOrder.orderedBooks,\r\n  books: state.data.books\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createOrder, setBooksIntoOrder }\r\n)(CurrentOrder);\r\n","import React, { Component } from \"react\";\r\nimport { getUser } from \"../actions/authActions\";\r\nimport MainTemplate from \"../templates/MainTemplate\";\r\nimport BooksCatalog from \"../components/BooksCatalog\";\r\nimport OrdersList from \"../components/OrdersList\";\r\nimport CurrentOrder from \"../components/CurrentOrder\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeComponent: \"BooksCatalog\"\r\n    };\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n    this.showBooksCatalog = this.showBooksCatalog.bind(this);\r\n    this.showOrders = this.showOrders.bind(this);\r\n    this.showCurrentOrder = this.showCurrentOrder.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.unauthorizated) {\r\n      console.log(\"Redirecring to login page... \");\r\n      this.props.history.push(\"/sign-in\");\r\n    }\r\n  }\r\n\r\n  handleSignIn(e) {\r\n    e.preventDefault();\r\n    this.props.authorizate({\r\n      login: this.state.login,\r\n      password: this.state.password\r\n    });\r\n  }\r\n  showBooksCatalog() {\r\n    this.setState({\r\n      activeComponent: \"BooksCatalog\"\r\n    });\r\n  }\r\n  showOrders() {\r\n    this.setState({\r\n      activeComponent: \"OrdersList\"\r\n    });\r\n  }\r\n  showCurrentOrder() {\r\n    this.setState({\r\n      activeComponent: \"CurrentOrder\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let activeComponent;\r\n    switch (this.state.activeComponent) {\r\n      case \"BooksCatalog\":\r\n        activeComponent = <BooksCatalog />;\r\n        break;\r\n      case \"OrdersList\":\r\n        activeComponent = <OrdersList />;\r\n        break;\r\n      default:\r\n        activeComponent = <></>;\r\n    }\r\n    const currentOrderStyle =\r\n      this.state.activeComponent === \"CurrentOrder\" ? \"block\" : \"none\";\r\n    return (\r\n      <MainTemplate\r\n        showBooksCatalog={this.showBooksCatalog}\r\n        showOrders={this.showOrders}\r\n        showCurrentOrder={this.showCurrentOrder}\r\n      >\r\n        <CurrentOrder showStyle={currentOrderStyle} />\r\n        {activeComponent}\r\n      </MainTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  unauthorizated: state.message.unauthorizated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getUser }\r\n)(Main);\r\n","import { FETCH_BOOKS, FETCH_ORDERS, USERS_GET } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    books: null,\r\n    orders: null,\r\n    users: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_BOOKS:\r\n            return {\r\n                ...state,\r\n                books: action.payload\r\n            };\r\n        case FETCH_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload\r\n            }; \r\n        case USERS_GET:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SIGN_UP , SIGN_IN , USER_GET} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: null,\r\n    user: JSON.parse(localStorage.getItem(\"user\"))\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return {\r\n                ...state,\r\n                token: action.payload\r\n            };\r\n        case SIGN_UP:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case USER_GET:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { \r\n    USER_UPDATED,\r\n    USER_DELETED, \r\n    ADD_BOOK, \r\n    DELETE_BOOK, \r\n    UPDATE_BOOK, \r\n    ORDER_CREATE,\r\n    ORDER_DELETE,\r\n    ORDER_CONFIRM_REJECT\r\n } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n    book: null,\r\n    order: null,\r\n    orderStatus: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_UPDATED:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }; \r\n        case USER_DELETED:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case ADD_BOOK:\r\n            return {\r\n                ...state,\r\n                book: action.payload\r\n            }; \r\n        case DELETE_BOOK:\r\n            return {\r\n                ...state,\r\n                book: action.payload\r\n            };\r\n        case UPDATE_BOOK:\r\n            return {\r\n                ...state,\r\n                book: action.payload\r\n            };\r\n        case ORDER_CREATE:\r\n            return {\r\n                ...state,\r\n                order: action.payload\r\n            };\r\n        case ORDER_DELETE:\r\n            return {\r\n                ...state,\r\n                order: action.payload\r\n            };\r\n        case ORDER_CONFIRM_REJECT:\r\n            return {\r\n                ...state,\r\n                orderStatus: action.payload\r\n            };          \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n  RESPONSE_MESSAGE_ERROR,\r\n  RESPONSE_MESSAGE_SUCCESS,\r\n  SET_UNAUTHORIZATED,\r\n  SHOW_APP_WARNING,\r\n  SHOW_APP_SUCCESS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  message: {\r\n    titleResolve: \"Ok\",\r\n    text: null\r\n  },\r\n  unauthorizated: false\r\n};\r\n//message = {\r\n//    titleResolve: 'Ok',\r\n//    titleReject: 'Ok',\r\n//    reolve: ()=>{},\r\n//    reject: ()=>{},\r\n//    type: 'success'\r\n//};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RESPONSE_MESSAGE_ERROR:\r\n      return {\r\n        ...state,\r\n        message: { ...state.message, text: action.payload, type: \"error\" }\r\n      };\r\n    case RESPONSE_MESSAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        message: { ...state.message, text: action.payload, type: \"success\" }\r\n      };\r\n    case SHOW_APP_WARNING:\r\n      return {\r\n        ...state,\r\n        message: { ...state.message, text: action.payload, type: \"error\" }\r\n      };\r\n    case SHOW_APP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        message: { ...state.message, text: action.payload, type: \"success\" }\r\n      };\r\n    case SET_UNAUTHORIZATED:\r\n      return {\r\n        ...state,\r\n        unauthorizated: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_BOOKS_INTO_ORDER, ADD_BOOK_INTO_ORDER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  orderedBooks: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_BOOKS_INTO_ORDER:\r\n      return {\r\n        ...state,\r\n        orderedBooks: action.payload\r\n      };\r\n    case ADD_BOOK_INTO_ORDER:\r\n      return {\r\n        ...state,\r\n        orderedBooks: [...state.orderedBooks, action.payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport dataReducer from \"./dataReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport doReducer from \"./doReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport currentOrderReducer from \"./currentOrderReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  data: dataReducer,\r\n  do: doReducer,\r\n  message: messageReducer,\r\n  currentOrder: currentOrderReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport SignIn from \"./containers/SignIn\";\nimport SignUp from \"./containers/SignUp\";\nimport MessageModal from \"./containers/MessageModal\";\nimport Main from \"./containers/Main\";\nimport store from \"./store\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <MessageModal />\n          <HashRouter>\n            <Switch>\n              <Route exact path=\"/\" component={SignIn} />\n              <Route exact path=\"/main\" component={Main} />\n              <Route exact path=\"/sign-in\" component={SignIn} />\n              <Route exact path=\"/sign-up\" component={SignUp} />\n            </Switch>\n          </HashRouter>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}